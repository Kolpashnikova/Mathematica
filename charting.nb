(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    488121,       9378]
NotebookOptionsPosition[    486250,       9318]
NotebookOutlinePosition[    486623,       9334]
CellTagsIndexPosition[    486580,       9331]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SectorChart3D", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"35", ",", "35", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "30", ",", "3"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"12", ",", "12", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "10", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5", ",", " ", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6716778109463253`*^9, 3.671677821295682*^9}, {
  3.6716778593296995`*^9, 3.671678103716975*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{{}, {
      {RGBColor[0.980722, 0.7110406, 0.2420506], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3213 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJzt1mtIU2EYB/Dlqj12szQzCzUx76g5m6mb7jlamqGkUyoMy0Sx6ArCbJh2
USu/RCW1cqAsopRSUqOwAt+0mlqIzUTzXohYSR+6To3KoN7zoadvfdwLBw6/
weFwxvP/P+6ZBzXZUolEYjNzxc5cv+6tx3qs5z+dYwKrWj9kakz8qPpDZr3L
gFErsKJT43PmONvgH59QjuedSxPYrs8PLKl29txPdliGJvwFJlukaXj+fQX3
hYZRydhbZFnSif6GcXfudoIpv1mPbPqhutAc5cW9JfNecr8cWejOK9GrCvy4
f33k6BCuU7PHZel+9pWB3OW7PbS2e6PYAsXZNpekYO6l3tvs4lWRTPfuqc43
KoR7ibb1u/K9kmVLIsINTgrucXdHxuJORLBA18O+h/tCxeeHFe3/MBnGZhkX
Xx4sDuNe7TlSPrxlHSvpUYPUMYJ74fwnTp3lCpbiU7tEVarkfj01IbHSFML2
vHJQTA2ruL+R9eUIw8Gs4Wb/8Q6nKO6dmpSjJ0xBTD8+5bY3SM3dssxOc6TW
n0mqatLM9sh9QXVMeleeNzt9zb+r8Yjo4V/qDs3z8WCmCYt+6oXol7OSiwtP
ubD80cSA0JUC9xh9s2VT5VKmjRcy3TeL3nhs38u50TJWId1oLD4keoG8tHRD
/WhTX+xdf9VR0fPbtmoGBibVGTG2GJYvelB3xdkL04tw7oH7fgVZog8aeu+0
5i5HXfJtwUMpel1cfN6z66vwVreifcsP8f0zVm9vHpZ6ouJ1XtvWOtHLelN2
5Mb7otLZlemSRa/yWlv0KTcAZc5XjbFM/J5uN9LrtU1rcHlMy1XDffH7H6/J
+Ta7QY7252oNthcjufekjSScOb8WL4UEmtuTxP+RPvCP361udatTTs8XID2P
gPT8AtLzDkjnAyCdJ4B0/gDSeQVI5xsgnYeAdH4C0nkLSOczIJ3ngHT+A9J9
AUj3CyDdR4B0fwHSfQdI9yMg3aeAdP8C0n0NSPc7IL0PzDyf3B8A6X0DkN5P
AOl9BpDefwDpfQmQ3q8A6X3s9xz9tb8B/gRvfgX+
                 "]], 
                
                BSplineSurface3DBox[{{{20.57248383023656, 28.31559480312316, 
                  0.}, {-7.743110972886601, 48.888078633359726`, 
                  0.}, {-28.31559480312316, 20.57248383023656, 0.}, {-35., 
                  11.372189368151721`, 0.}, {-35., 0., 
                  0.}}, {{
                   20.57248383023656, 28.31559480312316, 
                    3}, {-7.743110972886601, 48.888078633359726`, 
                    3}, {-28.31559480312316, 20.57248383023656, 3}, {-35., 
                    11.372189368151721`, 3}, {-35., 0., 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.9510565162951535, 1.}, {1., 0.7071067811865475, 1., 
                  0.9510565162951535, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 2}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {20.57248383023656,
                  28.31559480312316, 3.}, {20.57248383023656, 
                 28.31559480312316, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {-35., 
                 4.2862637970157365`*^-15, 3.}, {-35., 
                 4.2862637970157365`*^-15, 0.}}}]}},
              
              ImageSizeCache->{{42.818163372965955`, 
               232.46554065820905`}, {-116.99398343549811`, \
-2.8364485256438314`}}],
             StatusArea[#, {35, 35, 3}]& ,
             TagBoxNote->"{35, 35, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"35", ",", "35", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{35, 35, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3213, 
              FEPrivate`Not[DynamicChart`click$3213]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3213, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-3.1779334981768272`, 6.237045669318576, 0}}, {{1, 
           0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3213}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.9961444, 0.53180812, 0.12841012000000002`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3214 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIbIAaxR8EoGE5gF4veFYNFhg4xpfcUHVwtHGDiCy6u
O2OpY+xwjeXqnddC5nBxvklv1ToWmjjozaw1X3rcFC7+JHCWeweDmYNrpFTM
pRQTuPjVz9Ib97mbO1QaF7z69NoILr7G6fbck6UWDqf2MEfOizOEi7+atr8u
qdPSoemtfCVLrT5cvLjDPia+0cpheZ/a+wNSOnBxh8/tEltirB0MJl5cLjVL
Ay7+mjF2YrGUjcO3xd8Fbv9TgYvvu1q94MJOG4fJ9kVRL3wU4eJGs9N/ylnZ
Oqw5eqG2SUAa4S+bTY8vz7J1OCKqmPIxUxguvtD3+4W227YOvyeHPjkaww4X
52V6fvbjb1sHoeOscrMN39ujixtAxPfDwxlqDtcUsDkH0O09A7EXLg5z52aI
O+HiMH9NhfgLLv4KGg6/IOEAF4eFmzEk3ODisHBeAQlnuPhLaLy0QOIFLr4a
Go9nIPEIF78CjfdqSLzDxR9D04kbJJ3AxWHpSh+SruDi86Dp8DokHcLFd0DT
bRwk3cLFsQMOh1HxUfGhKI49nXM4YM8XHA7Y8xGHA/Z8x+GAPZ9yOGDP1xwO
2MsBDgfs5QaHA/ZyhsMBe7nE4YC9HONwwF7ucThgLyc5HLCXqxwO2MthhDhq
uc3hgL2cR9iLWi8g3IlajyD8hVrvcDhgr6cQ4YZaryHCGbUeBIYn1nqTwwF7
PcvhgL1eBvoLaz2OSFeo9T4wnLG2EzgcsLcrOBwA8xnQmQ==
                 "]], 
                
                BSplineSurface3DBox[{{{
                  17.633557568774194`, -24.270509831248425`, 0.}, {
                  41.90406740002262, -6.636952262474232, 0.}, {
                  24.270509831248425`, 17.633557568774194`, 0.}, {
                  21.477628684787636`, 21.477628684787625`, 0.}, {
                  17.633557568774194`, 24.27050983124842, 
                  0.}}, {{17.633557568774194`, -24.270509831248425`, 3}, {
                   41.90406740002262, -6.636952262474232, 3}, {
                   24.270509831248425`, 17.633557568774194`, 3}, {
                   21.477628684787636`, 21.477628684787625`, 3}, {
                   17.633557568774194`, 24.27050983124842, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.9876883405951377, 1.}, {1., 0.7071067811865475, 1., 
                  0.9876883405951377, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 2}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {
                 17.633557568774194`, -24.270509831248425`, 3.}, {
                 17.633557568774194`, -24.270509831248425`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {17.6335575687742, 
                 24.270509831248418`, 3.}, {17.6335575687742, 
                 24.270509831248418`, 0.}}}]}},
              
              ImageSizeCache->{{161., 315.4321799329002}, {-74.23332071506167,
                53.28263947593307}}],
             StatusArea[#, {30, 30, 3}]& ,
             TagBoxNote->"{30, 30, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"30", ",", "30", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{30, 30, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3214, 
              FEPrivate`Not[DynamicChart`click$3214]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3214, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            6., 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$3214}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.8542, 0.44055999999999995`, 0.1], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3215 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIpIAaxRwF5oId9Q9sWMxmHuu8bt8zMUj4AE//hoBJl
u0PS4YlS9/8eZxW4+O99/ayn5MUdXAIeWrFzqMLFjRTvXPuZL+KgKbD0qeN2
hPjFurptzasFHXRair91B6ghzL97/FLaKl6H/fbFfV6XEeLrWadWn73P7qAh
fmbqTzt1uPiN2Ye8Rf8yOtQfl3bUmYwQP8JZxJMo8MP+0KKE+t7zCHG9uxc0
+2Ve2P8zeu3/4DNCvC72xpqNiQ/3QHgacHELiPr96OqvQczfj24+dsDhMCqO
Xxx7eHI4YA9/Dgfs8cXhgD1+ORywpwcOB+zph8MBe3rjcMCePjkcsKdnDgfs
6Z/DAXt+AZqPNX9xOGDPjxwOADkU0Mw=
                 "]], 
                
                BSplineSurface3DBox[{{{-1.5039988027716524`, \
-11.905376415773734`, 0.}, {3.2096731755129944`, -12.500851666989272`, 0.}, {
                  7.053423027509677, -9.70820393249937, 
                  0.}}, {{-1.5039988027716524`, -11.905376415773734`, 3}, {
                   3.2096731755129944`, -12.500851666989272`, 3}, {
                   7.053423027509677, -9.70820393249937, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                  0.9297764858882513, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-1.5039988027716524`, -11.905376415773734`, 
                 3.}, {-1.5039988027716524`, -11.905376415773734`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {
                 7.053423027509677, -9.70820393249937, 3.}, {
                 7.053423027509677, -9.70820393249937, 0.}}}]}},
              
              ImageSizeCache->{{155.72666543994956`, 
               187.7307772779322}, {-25.98209857136086, 25.045585677203636`}}],
             StatusArea[#, {12, 12, 3}]& ,
             TagBoxNote->"{12, 12, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"12", ",", "12", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{12, 12, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3215, 
              FEPrivate`Not[DynamicChart`click$3215]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3215, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            0.5968557291956514, -2.3245995867087146`, 0}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3215}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.70815736, 0.41391999999999995`, 0.33511564000000027`], 
       EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3216 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIRIAaxRxq4u4nTdBnvl/0L2y9MWXBd+QBM/MXb9FPX
hP/v/xHR21U7DyE+2XRR2qKfLAfO6+VmP/JBiH/+mxZr4M91QHDLz38mj5Xg
4rOiNmq8a+Y/kPA7VehnIkJ8Tqn5qXUeQgcuOulcOX9SES4eJW6yc8YOkQM3
Fdm5y6UR4hNdZXav4hM/YHXLQfNEuAJcPCtO6+kvd8kDL/79r8r7LwcXl8wI
1TqcKH1AKu14y2INWbg4dsDhMFzFsYcDhwP2cONwwB7OHA7Y44XDAXs8cjhg
j3cOB+zphMMBe7ricMCeDjkcsKdbDgcAGf+p1g==
                 "]], 
                
                BSplineSurface3DBox[{{{-6.845471059286887, -7.289686274214114,
                   0.}, {-4.47690840943605, -9.513914651368761, 
                  0.}, {-1.2533323356430435`, -9.921147013144779, 
                  0.}}, {{-6.845471059286887, -7.289686274214114, 
                    3}, {-4.47690840943605, -9.513914651368761, 
                    3}, {-1.2533323356430435`, -9.921147013144779, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                  0.9510565162951535, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-6.845471059286887, -7.289686274214114, 
                 3.}, {-6.845471059286887, -7.289686274214114, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-1.2533323356430437`, -9.921147013144777, 
                 3.}, {-1.2533323356430437`, -9.921147013144777, 0.}}}]}},
              
              ImageSizeCache->{{137.1869359773868, 
               163.}, {-25.982098571360858`, 19.121474644769982`}}],
             StatusArea[#, {10, 10, 3}]& ,
             TagBoxNote->"{10, 10, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"10", ",", "10", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{10, 10, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3216, 
              FEPrivate`Not[DynamicChart`click$3216]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3216, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.8515585831301454, -1.8096541049320392`, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3216}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.59523472, 0.43624, 0.7121906200000001], EdgeForm[{GrayLevel[
       0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3217 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIBIAaxhzoQURAMPf9c9IDojkvM24LFD8DEBf1PaZ1r
FT/wYPHlqb83isLFve6xlh5mkTxw6W33owWfheHihjudnm9NkjrQfWPKnU9S
QnDx1N6Jh6/PlT4Q/e68UaKWAFz8Bf9V684tMgfWbP9s9M2DBy7eNC91WtRS
2QMmmj6Xr4tzwMX/h7gI8+XLHQh8qW/+/hgzXBw74HAYKuLY/cXhgD0cOByw
hxuHA/Zw5nDAHi8cDtjjkcMBe7xzOGBPJxwOAGiVhto=
                 "]], 
                
                BSplineSurface3DBox[{{{-7.608452130361228, -2.47213595499958, 
                  0.}, {-6.973715500221342, -4.4256544320232045`, 
                  0.}, {-5.47637684742951, -5.8317490193712915`, 
                  0.}}, {{-7.608452130361228, -2.47213595499958, 
                    3}, {-6.973715500221342, -4.4256544320232045`, 
                    3}, {-5.47637684742951, -5.8317490193712915`, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                  0.9685831611286311, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-7.608452130361228, -2.47213595499958, 
                 3.}, {-7.608452130361228, -2.47213595499958, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-5.47637684742951, -5.8317490193712915`, 
                 3.}, {-5.47637684742951, -5.8317490193712915`, 0.}}}]}},
              
              ImageSizeCache->{{134.85839577171487`, 
               163.}, {-25.982098571360858`, 9.91506076331364}}],
             StatusArea[#, {8, 8, 3}]& ,
             TagBoxNote->"{8, 8, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"8", ",", "8", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{8, 8, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3217, 
              FEPrivate`Not[DynamicChart`click$3217]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3217, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-1.3509246808032243`, -0.8573228719663947, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3217}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.4366, 0.49960000000000004`, 0.8097967], EdgeForm[{GrayLevel[
       0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3218 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIuIAaxBwrIb+U6k8EqfGDp498sq3f82A8TTyzctbmj
SPhAkmwt+7c1n+DiO9/NvfPtgPCB8IxJjn3sL+HiuX+u15h/ED7w7OPxujjp
m/tRbRE5wFl8c/96/mN78LuGw4E+4uju4XDA7n4OB+z+5XDAHj4cDtjDk8MB
ABp0V2w=
                 "]], 
                
                BSplineSurface3DBox[{{{-5., -6.123233995736766*^-16, 
                  0.}, {-5., -0.7919222016226812, 
                  0.}, {-4.755282581475767, -1.5450849718747377`, 
                  0.}}, {{-5., -6.123233995736766*^-16, 
                    3}, {-5., -0.7919222016226812, 
                    3}, {-4.755282581475767, -1.5450849718747377`, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                  0.9876883405951377, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-5., -6.123233995736766*^-16, 
                 3.}, {-5., -6.123233995736766*^-16, 0.}}}], 
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-4.755282581475767, -1.5450849718747375`, 
                 3.}, {-4.755282581475767, -1.5450849718747375`, 0.}}}]}},
              
              ImageSizeCache->{{144.03940361551685`, 
               163.}, {-25.982098571360858`, 0.4998291450634369}}],
             StatusArea[#, {5, 5, 3}]& ,
             TagBoxNote->"{5, 5, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"5", ",", "5", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{5, 5, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3218, 
              FEPrivate`Not[DynamicChart`click$3218]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3218, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.9876883405951378, -0.15643446504023098`, 0}}, {{
           1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
           1}}], TrackedSymbols :> {DynamicChart`click$3218}]],
        DynamicModuleValues:>{}]}}}, {}}, {}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{42., -42.}, {42., -42.}, {0., 3.06}},
  ViewPoint->{0, -2.4, 2}]], "Output",
 CellChangeTimes->{
  3.6716780192479515`*^9, {3.6716780673771267`*^9, 
   3.671678089983189*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
+39QUn7z3/iX7wE=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SectorChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35", ",", "35", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", " ", "3"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671678121109332*^9, 3.6716781429418235`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{{}, {
      {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3977 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJzt1mtIU2EYB/Dlqj12szQzCzUx76g5m6mb7jlamqGkUyoMy0Sx6ArCbJh2
USu/RCW1cqAsopRSUqOwAt+0mlqIzUTzXohYSR+6To3KoN7zoadvfdwLBw6/
weFwxvP/P+6ZBzXZUolEYjNzxc5cv+6tx3qs5z+dYwKrWj9kakz8qPpDZr3L
gFErsKJT43PmONvgH59QjuedSxPYrs8PLKl29txPdliGJvwFJlukaXj+fQX3
hYZRydhbZFnSif6GcXfudoIpv1mPbPqhutAc5cW9JfNecr8cWejOK9GrCvy4
f33k6BCuU7PHZel+9pWB3OW7PbS2e6PYAsXZNpekYO6l3tvs4lWRTPfuqc43
KoR7ibb1u/K9kmVLIsINTgrucXdHxuJORLBA18O+h/tCxeeHFe3/MBnGZhkX
Xx4sDuNe7TlSPrxlHSvpUYPUMYJ74fwnTp3lCpbiU7tEVarkfj01IbHSFML2
vHJQTA2ruL+R9eUIw8Gs4Wb/8Q6nKO6dmpSjJ0xBTD8+5bY3SM3dssxOc6TW
n0mqatLM9sh9QXVMeleeNzt9zb+r8Yjo4V/qDs3z8WCmCYt+6oXol7OSiwtP
ubD80cSA0JUC9xh9s2VT5VKmjRcy3TeL3nhs38u50TJWId1oLD4keoG8tHRD
/WhTX+xdf9VR0fPbtmoGBibVGTG2GJYvelB3xdkL04tw7oH7fgVZog8aeu+0
5i5HXfJtwUMpel1cfN6z66vwVreifcsP8f0zVm9vHpZ6ouJ1XtvWOtHLelN2
5Mb7otLZlemSRa/yWlv0KTcAZc5XjbFM/J5uN9LrtU1rcHlMy1XDffH7H6/J
+Ta7QY7252oNthcjufekjSScOb8WL4UEmtuTxP+RPvCP361udatTTs8XID2P
gPT8AtLzDkjnAyCdJ4B0/gDSeQVI5xsgnYeAdH4C0nkLSOczIJ3ngHT+A9J9
AUj3CyDdR4B0fwHSfQdI9yMg3aeAdP8C0n0NSPc7IL0PzDyf3B8A6X0DkN5P
AOl9BpDefwDpfQmQ3q8A6X3s9xz9tb8B/gRvfgX+
                 "]], 
                
                BSplineSurface3DBox[{{{20.57248383023656, 28.31559480312316, 
                  0.}, {-7.743110972886601, 48.888078633359726`, 
                  0.}, {-28.31559480312316, 20.57248383023656, 0.}, {-35., 
                  11.372189368151721`, 0.}, {-35., 0., 
                  0.}}, {{
                   20.57248383023656, 28.31559480312316, 
                    3}, {-7.743110972886601, 48.888078633359726`, 
                    3}, {-28.31559480312316, 20.57248383023656, 3}, {-35., 
                    11.372189368151721`, 3}, {-35., 0., 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.9510565162951535, 1.}, {1., 0.7071067811865475, 1., 
                  0.9510565162951535, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 2}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {20.57248383023656,
                  28.31559480312316, 3.}, {20.57248383023656, 
                 28.31559480312316, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {-35., 
                 4.2862637970157365`*^-15, 3.}, {-35., 
                 4.2862637970157365`*^-15, 0.}}}]}},
              
              ImageSizeCache->{{42.818163372965955`, 
               232.46554065820905`}, {-116.99398343549811`, \
-2.8364485256438314`}}],
             StatusArea[#, {35, 35, 3}]& ,
             TagBoxNote->"{35, 35, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"35", ",", "35", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{35, 35, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3977, 
              FEPrivate`Not[DynamicChart`click$3977]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3977, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-3.1779334981768272`, 6.237045669318576, 0}}, {{1, 
           0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3977}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3978 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIbIAaxR8EoGE5gF4veFYNFhg4xpfcUHVwtHGDiCy6u
O2OpY+xwjeXqnddC5nBxvklv1ToWmjjozaw1X3rcFC7+JHCWeweDmYNrpFTM
pRQTuPjVz9Ib97mbO1QaF7z69NoILr7G6fbck6UWDqf2MEfOizOEi7+atr8u
qdPSoemtfCVLrT5cvLjDPia+0cpheZ/a+wNSOnBxh8/tEltirB0MJl5cLjVL
Ay7+mjF2YrGUjcO3xd8Fbv9TgYvvu1q94MJOG4fJ9kVRL3wU4eJGs9N/ylnZ
Oqw5eqG2SUAa4S+bTY8vz7J1OCKqmPIxUxguvtD3+4W227YOvyeHPjkaww4X
52V6fvbjb1sHoeOscrMN39ujixtAxPfDwxlqDtcUsDkH0O09A7EXLg5z52aI
O+HiMH9NhfgLLv4KGg6/IOEAF4eFmzEk3ODisHBeAQlnuPhLaLy0QOIFLr4a
Go9nIPEIF78CjfdqSLzDxR9D04kbJJ3AxWHpSh+SruDi86Dp8DokHcLFd0DT
bRwk3cLFsQMOh1HxUfGhKI49nXM4YM8XHA7Y8xGHA/Z8x+GAPZ9yOGDP1xwO
2MsBDgfs5QaHA/ZyhsMBe7nE4YC9HONwwF7ucThgLyc5HLCXqxwO2MthhDhq
uc3hgL2cR9iLWi8g3IlajyD8hVrvcDhgr6cQ4YZaryHCGbUeBIYn1nqTwwF7
PcvhgL1eBvoLaz2OSFeo9T4wnLG2EzgcsLcrOBwA8xnQmQ==
                 "]], 
                
                BSplineSurface3DBox[{{{
                  17.633557568774194`, -24.270509831248425`, 0.}, {
                  41.90406740002262, -6.636952262474232, 0.}, {
                  24.270509831248425`, 17.633557568774194`, 0.}, {
                  21.477628684787636`, 21.477628684787625`, 0.}, {
                  17.633557568774194`, 24.27050983124842, 
                  0.}}, {{17.633557568774194`, -24.270509831248425`, 3}, {
                   41.90406740002262, -6.636952262474232, 3}, {
                   24.270509831248425`, 17.633557568774194`, 3}, {
                   21.477628684787636`, 21.477628684787625`, 3}, {
                   17.633557568774194`, 24.27050983124842, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.9876883405951377, 1.}, {1., 0.7071067811865475, 1., 
                  0.9876883405951377, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 2}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {
                 17.633557568774194`, -24.270509831248425`, 3.}, {
                 17.633557568774194`, -24.270509831248425`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {17.6335575687742, 
                 24.270509831248418`, 3.}, {17.6335575687742, 
                 24.270509831248418`, 0.}}}]}},
              
              ImageSizeCache->{{161., 315.4321799329002}, {-74.23332071506167,
                53.28263947593307}}],
             StatusArea[#, {30, 30, 3}]& ,
             TagBoxNote->"{30, 30, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"30", ",", "30", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{30, 30, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3978, 
              FEPrivate`Not[DynamicChart`click$3978]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3978, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            6., 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$3978}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3979 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIpIAaxRwF5oId9Q9sWMxmHuu8bt8zMUj4AE//hoBJl
u0PS4YlS9/8eZxW4+O99/ayn5MUdXAIeWrFzqMLFjRTvXPuZL+KgKbD0qeN2
hPjFurptzasFHXRair91B6ghzL97/FLaKl6H/fbFfV6XEeLrWadWn73P7qAh
fmbqTzt1uPiN2Ye8Rf8yOtQfl3bUmYwQP8JZxJMo8MP+0KKE+t7zCHG9uxc0
+2Ve2P8zeu3/4DNCvC72xpqNiQ/3QHgacHELiPr96OqvQczfj24+dsDhMCqO
Xxx7eHI4YA9/Dgfs8cXhgD1+ORywpwcOB+zph8MBe3rjcMCePjkcsKdnDgfs
6Z/DAXt+AZqPNX9xOGDPjxwOADkU0Mw=
                 "]], 
                
                BSplineSurface3DBox[{{{-1.5039988027716524`, \
-11.905376415773734`, 0.}, {3.2096731755129944`, -12.500851666989272`, 0.}, {
                  7.053423027509677, -9.70820393249937, 
                  0.}}, {{-1.5039988027716524`, -11.905376415773734`, 3}, {
                   3.2096731755129944`, -12.500851666989272`, 3}, {
                   7.053423027509677, -9.70820393249937, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                  0.9297764858882513, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-1.5039988027716524`, -11.905376415773734`, 
                 3.}, {-1.5039988027716524`, -11.905376415773734`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 3.}, {
                 7.053423027509677, -9.70820393249937, 3.}, {
                 7.053423027509677, -9.70820393249937, 0.}}}]}},
              
              ImageSizeCache->{{155.72666543994956`, 
               187.7307772779322}, {-25.98209857136086, 25.045585677203636`}}],
             StatusArea[#, {12, 12, 3}]& ,
             TagBoxNote->"{12, 12, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"12", ",", "12", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{12, 12, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3979, 
              FEPrivate`Not[DynamicChart`click$3979]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3979, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            0.5968557291956514, -2.3245995867087146`, 0}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3979}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3980 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIRIAaxRxq4u4nTdBnvl/0L2y9MWXBd+QBM/MXb9FPX
hP/v/xHR21U7DyE+2XRR2qKfLAfO6+VmP/JBiH/+mxZr4M91QHDLz38mj5Xg
4rOiNmq8a+Y/kPA7VehnIkJ8Tqn5qXUeQgcuOulcOX9SES4eJW6yc8YOkQM3
Fdm5y6UR4hNdZXav4hM/YHXLQfNEuAJcPCtO6+kvd8kDL/79r8r7LwcXl8wI
1TqcKH1AKu14y2INWbg4dsDhMFzFsYcDhwP2cONwwB7OHA7Y44XDAXs8cjhg
j3cOB+zphMMBe7ricMCeDjkcsKdbDgcAGf+p1g==
                 "]], 
                
                BSplineSurface3DBox[{{{-6.845471059286887, -7.289686274214114,
                   0.}, {-4.47690840943605, -9.513914651368761, 
                  0.}, {-1.2533323356430435`, -9.921147013144779, 
                  0.}}, {{-6.845471059286887, -7.289686274214114, 
                    3}, {-4.47690840943605, -9.513914651368761, 
                    3}, {-1.2533323356430435`, -9.921147013144779, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                  0.9510565162951535, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-6.845471059286887, -7.289686274214114, 
                 3.}, {-6.845471059286887, -7.289686274214114, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-1.2533323356430437`, -9.921147013144777, 
                 3.}, {-1.2533323356430437`, -9.921147013144777, 0.}}}]}},
              
              ImageSizeCache->{{137.1869359773868, 
               163.}, {-25.982098571360858`, 19.121474644769982`}}],
             StatusArea[#, {10, 10, 3}]& ,
             TagBoxNote->"{10, 10, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"10", ",", "10", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{10, 10, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3980, 
              FEPrivate`Not[DynamicChart`click$3980]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3980, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.8515585831301454, -1.8096541049320392`, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3980}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3981 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIBIAaxhzoQURAMPf9c9IDojkvM24LFD8DEBf1PaZ1r
FT/wYPHlqb83isLFve6xlh5mkTxw6W33owWfheHihjudnm9NkjrQfWPKnU9S
QnDx1N6Jh6/PlT4Q/e68UaKWAFz8Bf9V684tMgfWbP9s9M2DBy7eNC91WtRS
2QMmmj6Xr4tzwMX/h7gI8+XLHQh8qW/+/hgzXBw74HAYKuLY/cXhgD0cOByw
hxuHA/Zw5nDAHi8cDtjjkcMBe7xzOGBPJxwOAGiVhto=
                 "]], 
                
                BSplineSurface3DBox[{{{-7.608452130361228, -2.47213595499958, 
                  0.}, {-6.973715500221342, -4.4256544320232045`, 
                  0.}, {-5.47637684742951, -5.8317490193712915`, 
                  0.}}, {{-7.608452130361228, -2.47213595499958, 
                    3}, {-6.973715500221342, -4.4256544320232045`, 
                    3}, {-5.47637684742951, -5.8317490193712915`, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                  0.9685831611286311, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-7.608452130361228, -2.47213595499958, 
                 3.}, {-7.608452130361228, -2.47213595499958, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-5.47637684742951, -5.8317490193712915`, 
                 3.}, {-5.47637684742951, -5.8317490193712915`, 0.}}}]}},
              
              ImageSizeCache->{{134.85839577171487`, 
               163.}, {-25.982098571360858`, 9.91506076331364}}],
             StatusArea[#, {8, 8, 3}]& ,
             TagBoxNote->"{8, 8, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"8", ",", "8", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{8, 8, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3981, 
              FEPrivate`Not[DynamicChart`click$3981]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3981, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-1.3509246808032243`, -0.8573228719663947, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$3981}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$3982 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIuIAaxBwrIb+U6k8EqfGDp498sq3f82A8TTyzctbmj
SPhAkmwt+7c1n+DiO9/NvfPtgPCB8IxJjn3sL+HiuX+u15h/ED7w7OPxujjp
m/tRbRE5wFl8c/96/mN78LuGw4E+4uju4XDA7n4OB+z+5XDAHj4cDtjDk8MB
ABp0V2w=
                 "]], 
                
                BSplineSurface3DBox[{{{-5., -6.123233995736766*^-16, 
                  0.}, {-5., -0.7919222016226812, 
                  0.}, {-4.755282581475767, -1.5450849718747377`, 
                  0.}}, {{-5., -6.123233995736766*^-16, 
                    3}, {-5., -0.7919222016226812, 
                    3}, {-4.755282581475767, -1.5450849718747377`, 3}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                  0.9876883405951377, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-5., -6.123233995736766*^-16, 
                 3.}, {-5., -6.123233995736766*^-16, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 3.}, {-4.755282581475767, -1.5450849718747375`, 
                 3.}, {-4.755282581475767, -1.5450849718747375`, 0.}}}]}},
              
              ImageSizeCache->{{144.03940361551685`, 
               163.}, {-25.982098571360858`, 0.4998291450634369}}],
             StatusArea[#, {5, 5, 3}]& ,
             TagBoxNote->"{5, 5, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"5", ",", "5", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{5, 5, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3982, 
              FEPrivate`Not[DynamicChart`click$3982]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$3982, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.9876883405951378, -0.15643446504023098`, 0}}, {{
           1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
           1}}], TrackedSymbols :> {DynamicChart`click$3982}]],
        DynamicModuleValues:>{}]}}}, {}}, {}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{42., -42.}, {42., -42.}, {0., 3.06}},
  ViewPoint->{0., -2.4, 2.},
  ViewVertical->{0., 0., 10.}]], "Output",
 CellChangeTimes->{
  3.6716781450883594`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ZH+X5Ett/yP+jx/pc/8fJS9bgA==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SectorChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35", ",", "35", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", " ", "3"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.671678186909072*^9, 3.6716781996951413`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{{}, {
      {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$5127 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzB9agHPn2TVBxmGOtdOhWg4wAT
Z0k2F/30g++AhXt7/5pCC7g4VN0BmD4UwxoMD1x3ujGrf58Yhjh2e02g9tqg
2SsHtdcDzV6bAzB9qOY7Qu1VwxAnzt4f9tjt/WGP3V5oOsGwFyGOausP+8Fl
L4cDdns5HLDby+GA3V6EOKq9HA7Y0xXMXvR0BbMXPV3BzEdPVwhxdHsZsIKR
Jk77chIAA//NIw==
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3D+wKpjcICo
+wbnQ9T9g/OHl73UUwcAfN6Cow==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{42.818163372965955`, 
               232.46554065820905`}, {-116.99398343549811`, \
-2.8364485256438314`}}],
             StatusArea[#, {35, 35, 3}]& ,
             TagBoxNote->"{35, 35, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"35", ",", "35", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{35, 35, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5127, 
              FEPrivate`Not[DynamicChart`click$5127]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$5127, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-3.1779334981768272`, 6.237045669318576, 0}}, {{1, 
           0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$5127}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$5128 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzBDha9KwaLFB3iSu8pOrhqHICJ
c9uyVe/4bOIw49BBM9seLrg4VJ0DTB9MPPb0nPuuVaoOUVAa3fxYqD5UcUOo
vRZo9rpA7ZVCs9fCAaYP1V5TqL2mGObHQvXht/eHPXZ7f9hjt/eHPXZ7f9hj
txchPjjs5XDAbi+HA3Z7ORyw28vhgN1eDgfs6QpmL3q6gtmLnq5g9qKnK4T5
qOmKAx7PqGCkidO+nAQALNrhkQ==
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5A6uOwQGi
7hucD1H3H84fXvZSTx0AClOJ5w==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{161., 315.4321799329002}, {-74.23332071506167,
                53.28263947593307}}],
             StatusArea[#, {30, 30, 3}]& ,
             TagBoxNote->"{30, 30, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"30", ",", "30", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{30, 30, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5128, 
              FEPrivate`Not[DynamicChart`click$5128]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$5128, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            6., 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$5128}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$5129 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwDXOIp5EgRf7Dy1KqO89L34AJs6d
ZauYufanfepu44X5DJJw8R72DW1bzHgc6r5v3DIzS/gAqjk/oOaoo5nD6QAx
RxPNHBmoOcoEzPlhj92cH/bYzflhT1tzOBywm8PhgN0cDgfs4QwzBz2cYeag
hzOHA/ZYHGzipOcLAB39lQE=
                "], 
                SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}, {2., 1.8595529717765027`, 2.}, {1., 
                 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{155.72666543994956`, 
               187.7307772779322}, {-25.982098571360858`, 25.04558567720364}}],
             StatusArea[#, {12, 12, 3}]& ,
             TagBoxNote->"{12, 12, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"12", ",", "12", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{12, 12, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5129, 
              FEPrivate`Not[DynamicChart`click$5129]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$5129, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            0.5968557291956514, -2.3245995867087146`, 0}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$5129}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$5130 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zggGRGqNbhRO4DUmnHWxZr8B6AiSfe
mbY26gXjgXMKlpfk2YXh4nc2cZou432yf1H7hSkLriPEIeZIQ82RRTNHEGqO
Mpo5X6DmKBMw54c9dnN+2GM354c9bc3hcMBuDocDdnM4HLCHM8wc9HCGmYMe
zhwO2GNxsImTni8An8adsw==
                "], 
                SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}, {2., 1.902113032590307, 2.}, {1., 
                 0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{137.1869359773868, 
               163.}, {-25.982098571360854`, 19.121474644769986`}}],
             StatusArea[#, {10, 10, 3}]& ,
             TagBoxNote->"{10, 10, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"10", ",", "10", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{10, 10, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5130, 
              FEPrivate`Not[DynamicChart`click$5130]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$5130, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.8515585831301454, -1.8096541049320392`, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$5130}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$5131 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwP8QF2G+fL4DgS/1zd8f+7wfJh5j
I7JW9Cn3gTn7kw/e28x4ACYuoiAYev456wHRHZeYtwWzH0A1Rw5qDvMBVHOk
oeYIopkjCjVHnIA5P+yxm/PDHrs5P+xpaw6HA3ZzOBywm8PhgD2cYeaghzPM
HPRw5nDAHouDTZz0fAEAMCKX4w==
                "], 
                SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}, {2., 1.9371663222572622`, 2.}, {1., 
                 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{134.85839577171487`, 
               163.}, {-25.982098571360858`, 9.91506076331364}}],
             StatusArea[#, {8, 8, 3}]& ,
             TagBoxNote->"{8, 8, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"8", ",", "8", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{8, 8, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5131, 
              FEPrivate`Not[DynamicChart`click$5131]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$5131, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-1.3509246808032243`, -0.8573228719663947, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$5131}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$5132 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3ygAcsBzuKb+9fzb9uDLl7iPM8qN/zm
fpiI/FauMxmszAeWPf7NsnrHi/2o6kWg5hzbgy4OMeclmjnCUHN+EDAHFm7o
5vywx24OQj1tzOFwwG4OhwN2c2Dq0cMZIY4azjBz0MMZph4dDDZx0vMFANzb
ggU=
                "], 
                SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}, {2., 1.9753766811902753`, 2.}, {1., 
                 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              ImageSizeCache->{{144.03940361551685`, 
               163.}, {-25.982098571360858`, 0.4998291450634369}}],
             StatusArea[#, {5, 5, 3}]& ,
             TagBoxNote->"{5, 5, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"5", ",", "5", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{5, 5, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5132, 
              FEPrivate`Not[DynamicChart`click$5132]], PassEventsDown -> True,
             Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$5132, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.9876883405951378, -0.15643446504023098`, 0}}, {{
           1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
           1}}], TrackedSymbols :> {DynamicChart`click$5132}]],
        DynamicModuleValues:>{}]}}}, {}}, {}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{42., -42.}, {42., -42.}, {0., 3.06}},
  ViewPoint->{0., -2.4, 2.},
  ViewVertical->{0., 0., 10.}]], "Output",
 CellChangeTimes->{
  3.671678201165201*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfWeUHNW1bt/u0UgEE5yuMRkJlPNocs4555yjJmpGaTQajXKWAKEIEkkS
AkQUNibbJGOTLAyYbGwcLsbvGYPx9V3rru/tvU/F7uqZkeC+H2+9Wau6e7qr
q87Z37e/vc8+p6qz6vpbmzrr+tsa6q5K6avraW1rWHJVcncfveX5N5fr3xJd
LtfLV7n4Neil9iB/Sfyg/fP/X///19/w6w/kyYNPPvkEn376Kb744gtXo/ro
PXkKlI/uPHYUuWXFiEpJRNPidjz8o0ca1F7vyFMAPvvsMxy/6y7EZ6TiilnT
3Lhk2hR6+4rZ05GUm437fvwIPv/iizr1pd9oZ33v/fexbfcuzIsMc02Qb0zA
ophIzEqIQn5Lvfatv7tq1Nfe0s711Vdf4dbbbkNkcgIumTo5UL4ZiCnzZyOp
KA/zs1MwOzUOi1evwNvvvVutvvymds6//e1veOjhhxAUHemaJN+chOmLFiCz
shRBhZlYmJeOeVnJCM/PworN6/H3L76oVEf4tXaET//yFwwMruBvuc6RI5wj
586pKkdoWR6Ci3PkSAty0zA3MwmFbY144tmfuirUYU5rh/nv//5vvPPOO2hZ
3OE6Tw5znjSkqqUJ4VVFCKsoQIgcLts4XCQdWmuUq0wd7leaUfhwzz73HJo7
2tnq6ojnS8MSKwm5+jJE1pT4HrkgQ7rbPTKEt99/t1Qd9HWtjUQH3Lj3JgHo
W3LEC+SImXWViGupRkxThe+RS3OxqChL2htRlIMHHvsxQ1+sjvyaBYbB4dVi
xAvkyBdibngIaro6kNjZgPj2OsTyGRrtZwgtz0dwCRm4IFPa3TWySqxRpA7/
qnb4jz/+GMXVlUxFOjAf/iIxblFHM1L725Dc06ydptY8TV0ZImqKEVapzLOo
KBsLiA0964fx9y+/KFRneNlCQuZvTWsz2/siOcnFuDpoLrL7O5C5shvpyxYj
dYn3yaoQ3VCOyFrNYtSfEOlPBoo7W/Hk88+6CtSZfqn1hc/01NNPo6SmyvVt
Oc23MSspGrkjA8hdM4DsoT51uqWW0y2uR1xrDQFUKebjfoVXFgo/GZyosnw8
9cJz+epMv7BwiOGePHcW9+liOdn32FVQuKIHRZsHUbBxBfLXLaMT99OJe5G5
ootO3IGUvlYkdTUiQcMtmgwaWVeKiGoNM+JaTEUhHnz8J4JXrjrzS1of/+u/
/gsnH3xAiPYdOe33EZ6XgdItQyjZNozirUPq9Bssp1/Viww6fdpAu2niNupz
s9lnISSZd0FeGrrWrGIi5qgz/9zClFvvvAPXLpyrnfnfhSnVK/pQtnMEpTto
275GtYJaU7RJtSJv7VLkDC9B1mCPBjQZoLsJCR114hpiAAaZrM4usTA/Aw89
+ZhLO/2LltPnlxaLH6jTXyIelttQjarNq1G2ay01Y63/pqxfjrwRjQSaMVJ6
W8QYcW2KAIyD+A6BH19TiqdfesGVrZrxgtaMV159hYVI/OU7mhKzdqeUFaJ0
zVI5PTWD9qQG0R7cpFJpEjdnNYq2rELhxpWCTc5wv1glQ6M/00Kor+NSXSyU
kKb8/AVXlmrKcxa6nzp1CqXVlcQ9Je1zwoJR1tuBcuo5W0FrzgRpzcWGYYq3
rjZYkjey1DRKPzNEYaM7ILODWxGntSJTteJZi3s/9thjaGxtYUN8V4tnzIyG
/h6U0ZlKtw+72QBubo6bm+JGObXn2xpounUUWDbriLd2IJmBEk/V+EIiZ2lT
hmrSzyze+eDDDyMsPsZs0rnSpPKmepQQGxgKPmHJ9mExCDegVGylGuj6LrcQ
5bvXybO9nWy7VWI7VpUs8i7mNTu27lnebXzqxefTVRt/aglqjz7+mHjT9zRZ
J04hvaoU1SPLxRLsy4yU3thSbiw31ARWWsa2dHNbCWG9tbwPd46Po3sho5yx
vNPkmldLy/u7SL+/dKWppj6jNfX06dPYs3+fSI5qqkeaGkk5TtWa5XRqMoeb
z0RG5jaXbPU1rr296zzS3ItUc3fqpLSAv3qJQUinpi7Zso5DTapq6dNaS//5
z3/i5iOHxTlVS78jsbKwtoqccxkKCXnWAqY+Q8jOOC5Da0YOkFZfoBlYowId
L5+0JZfoysFFtbiJWlxrtJhl7eGnntBa+5RF0fYfOMDZmWHXH0ydjNDUBJSs
7CO7kjXovcJNK/WWK1tT/lNsabmNy2O0mt/nfU0CW1rdbbaapSehvpwVMEW1
+klLPtLZ24PpwQuMVrNnFdRUIn+wl1pIx/Vw093casqGRrW2N0W82mzyw6Sy
Y5tJqMKrClEx0M0UTlZtftwiCD/68Y+xdHAlC8L3NI2aMm+2NLtkeIDCAzWa
jk4aWkAcLNQ30/YWmk/yYosPxSdI889XRGFq+2k6Zx6s9Bx9R27arTX7MYvA
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
tSsE9RvW7b7veKyV3yoHyq5YLjLGUheSs1FYo4YJ+2WYEFdt5kCJRg50zE8O
5LEqu8uk+AS7jgcIxWMsFLdkMUTxBBvFb9aymP2K4tS4yBKd4rskaQujUBTm
RXEOUYsy1xgZzEKD4suI4gNE8SXk2L0yRpodRxSP7cCs6HaieKuMO6wZDGv5
dSFVMqa6VsYHJdpgQNfyXLuWGzRPttH80uvidKqTcX54bbQrGFfOiEdMUh5i
0zIwJXiBNgw2q15THKteTgVrc+2AraaZN0pN0zbx5LXOx1qs9lnj42c6YsiY
jvifobbXjZrVlSpc7HpPo/Y8I1m5QVBktDmqsxAya1SyckhLVm4dR7LiQOlx
ZCqK4VH8Jn/DxnBrtsJDjDgbw/cRw/Vs5XrKVojhhTsk2QrL2yqlHXbTkOz1
JsMzVtuzFY3h84ThKluZbWQr7c7ZCrPckq34CjmxfG6uCLkvyzlrSZKshZhO
yBHXA5js8sq1EIsisxCVkoJ5sZHE6wWGXtt4HR3moNkxfqbbvDPx7LEzcX0i
xmmqzWl9hNOEqm3w6qfmN75q7rnOU6kasdW82i58+dVXNmJfiDd/8yGCEltF
umw5CUmjyklu8c1J6r9uTqLoHM0vNTr7S74Pm3lJ+dkl32PlJYZoa3nJLMlL
vEW7zku0rQm4NTfRKD0ny5KfcCKu0zqZqR3I3HYFCcv5rZDYQjS3tmN+XJRR
t/bHY+d5JyeNzvCdNh41/6j0XevTNc4cW807TXBYXOuXyi6PdZ2eVrE8z2Ft
rdf99OmZ93nytV/qd7pUF5B9G0vX7BMAOTIbqUeJJfUYX/llvDLt8ZuIRNlz
bZbpOqdEhHPtM01E7DLNxdiFqSTTKeOTaf/5tjUZ8ea1JSERuSZez84wuU2S
TfymkRExnEgt/8v7aQiNK0ZlbR0iM1PVWojoUNuqF0dC+5lqG3OWvMbfLHnN
6IlH/6jrIJwSDzXbNslpGYTPSheD004V+NXGzwMtOXSDDBltnL4Qb73zEYJT
OgXYRVkjZ1Ik8ZLnE2PK89fNNrzlWWUbPvJsZBvjkWd7Tm1SudUr43Cisi7R
KuvQc2tdpk06a1ItlM4gGhOxKcfgjETeo89YzsMSylBZV4+g5HjfRR5jUNix
OG5bn1fgV5djmp1qH2dWIA/0y+GJo3FYE+WJ9mkke7WP9iEauzzy2VOvq98X
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
wNVOeSXvyaeuySaDvFnEjKaz8Jn4jLzuJbloOdo6e5DT1mBhkvdNWu1FRnuG
5zCFY7ldoBedLBXx8VQbPdZqo0v95roaeVx//11CIo1RYVp0ffyZlxGeOaAN
iTeLIPgvM44xJB4lyXPk1WwLrxwiqsNQ2Hfi0Zro+WqZLdmzDos1PZPoak36
dE0z+GXqmhqeDJBViSPUV4NnsvVNEsIFqFKQTqbEJWrvayyccuLVSsVsagG3
hFuUUjIoPMvtaBzHHdmdg6XDLWTP+0au97YSa9OJW6U2mK6IFa5NCj7xs9cQ
mbNSLMxIMEKsBmMMZ8ecFJwwOqVm2JI0GTd4z2PbrrAyVxKZ4dFLrizJmhki
7bQyw+RaH9myUktJl9DLzeiTCVUeJwzTlMyjM03YFiiP58p7Jn90Di1THKII
LIxNJWToPK5LbVTilgjZqWXcwrjCNahoWoqi9iahlOOP1Yz/h0Vc532dJEzW
+lh/zJA2YpVecc5QrIrQWPXAj18Ux7JVm8u8qs1nwSq/+Zcjya5TJHMom+gl
POvUiFk68dIuSx6mx0XbqMDQLzM2CtG00YHKySxky1jtZsypnwbfTM5RPzXW
rZjEpJFXtKvGG9k0HXIxiVa5LlMEYgoTiRZ5kUjoTq3hdc+y9DV/A2IKepHV
3IC0npYxfzjErk0S+771dTMpjzaNwf9vvvt2IVCmlUCcxf8DnSv2ivuwMSMK
d1hW7I468/s1sngvFqnr46ZoDPKTxdfe5ixVPpmVfxbZoqA1q7cxyZAtNwNM
zTeDIq+1Y0YFaMnXKn2bxDzx8CuP7ODReCKXXLvUgS5x4Mp6OTePc7kt3CbV
ti0oqVuB/LYWZDj8usgov5LlciLNeMTHY533KrAoTpYiTKRGGE65u1Yd1Kpg
1qvLDoyVcn/ThJnmmy75kx2flMmMb46kMWLcDj/ys8koTojDe5FHkyIP4+5m
CriZC4GaJPG/8p76lIlGX3Kdr/FincGLEOGFnRvSDGoONcvN7aNok1o2RLGr
DQX9HT70sMUmSqcvPHNNsS8w0e8Fyu9tUhTJVgyJMgZlX6F76GYRW9usUoVi
SPzXGZT5JUeAc+LjdTmikU/7JD9mXHIkiBGbrLn1KCQRdbESxZssBmECBXyP
pODBsq0lF+HHyw1CGGIhwcWLGHwaJoadHNIsbp40k5or3Kbmp1dvQktXL0qW
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SectorChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35", ",", "35", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", " ", "3"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", " ", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<R\>\"", ",", "\"\<Stata\>\"", ",", "\"\<Matlab\>\"", ",", " ", 
      "\"\<Python\>\"", ",", "\"\<Markdown\>\"", ",", 
      "\"\<Markup Languages\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6716782225033517`*^9, 3.67167830220848*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     Directive[
      RGBColor[0.5, 0.5, 1.], 
      EdgeForm[
       Directive[
        GrayLevel[0], 
        Opacity[0.1]]]], {{{{{}, {{
           Directive[
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.1]]], 
            RGBColor[0.237736, 0.340215, 0.575113]], 
           DynamicModuleBox[{DynamicChart`click$7261 = False}, 
            GeometricTransformation3DBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                   BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzB9agHPn2TVBxmGOtdOhWg4wAT
Z0k2F/30g++AhXt7/5pCC7g4VN0BmD4UwxoMD1x3ujGrf58Yhjh2e02g9tqg
2SsHtdcDzV6bAzB9qOY7Qu1VwxAnzt4f9tjt/WGP3V5oOsGwFyGOausP+8Fl
L4cDdns5HLDby+GA3V6EOKq9HA7Y0xXMXvR0BbMXPV3BzEdPVwhxdHsZsIKR
Jk77chIAA//NIw==
                    "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3D+wKpjcICo
+wbnQ9T9g/OHl73UUwcAfN6Cow==
                    "], 
                    SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4,
                     4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                    SplineClosed -> {True, False}, 
                    Method -> {"SurfaceCaps" -> True}]}], 
                 StatusArea[#, {35, 35, 3}]& , TagBoxNote -> "{35, 35, 3}"], 
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"35", ",", "35", ",", "3"}], "}"}], {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[{35, 35, 3}, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7261, 
                  FEPrivate`Not[DynamicChart`click$7261]], PassEventsDown -> 
                True, Method -> "Preemptive", PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$7261, {{{1., 0, 0}, {0, 1., 0}, {
                 0, 0, 1.}}, {-3.1779334981768272`, 6.237045669318576, 0}}, {{
               1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
               1}}], TrackedSymbols :> {DynamicChart`click$7261}]], 
            DynamicModuleValues :> {}]}, {
           Directive[
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.1]]], 
            RGBColor[0.264425, 0.423024, 0.3849]], 
           DynamicModuleBox[{DynamicChart`click$7262 = False}, 
            GeometricTransformation3DBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                   BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzBDha9KwaLFB3iSu8pOrhqHICJ
c9uyVe/4bOIw49BBM9seLrg4VJ0DTB9MPPb0nPuuVaoOUVAa3fxYqD5UcUOo
vRZo9rpA7ZVCs9fCAaYP1V5TqL2mGObHQvXht/eHPXZ7f9hjt/eHPXZ7f9hj
txchPjjs5XDAbi+HA3Z7ORyw28vhgN1eDgfs6QpmL3q6gtmLnq5g9qKnK4T5
qOmKAx7PqGCkidO+nAQALNrhkQ==
                    "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5A6uOwQGi
7hucD1H3H84fXvZSTx0AClOJ5w==
                    "], 
                    SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4,
                     4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                    SplineClosed -> {True, False}, 
                    Method -> {"SurfaceCaps" -> True}]}], 
                 StatusArea[#, {30, 30, 3}]& , TagBoxNote -> "{30, 30, 3}"], 
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"30", ",", "30", ",", "3"}], "}"}], {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[{30, 30, 3}, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7262, 
                  FEPrivate`Not[DynamicChart`click$7262]], PassEventsDown -> 
                True, Method -> "Preemptive", PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$7262, {{{1., 0, 0}, {0, 1., 0}, {
                 0, 0, 1.}}, {6., 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
               1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$7262}]], 
            DynamicModuleValues :> {}]}, {
           Directive[
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.1]]], 
            RGBColor[0.416394, 0.555345, 0.24182]], 
           DynamicModuleBox[{DynamicChart`click$7263 = False}, 
            GeometricTransformation3DBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                   BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwDXOIp5EgRf7Dy1KqO89L34AJs6d
ZauYufanfepu44X5DJJw8R72DW1bzHgc6r5v3DIzS/gAqjk/oOaoo5nD6QAx
RxPNHBmoOcoEzPlhj92cH/bYzflhT1tzOBywm8PhgN0cDgfs4QwzBz2cYeag
hzOHA/ZYHGzipOcLAB39lQE=
                    "], 
                    SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                    0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {
                    1., 0.9297764858882513, 1.}, {2., 1.8595529717765027`, 
                    2.}, {1., 0.9297764858882513, 1.}, {1., 
                    0.9297764858882513, 1.}, {2., 1.8595529717765027`, 2.}, {
                    1., 0.9297764858882513, 1.}, {1., 0.9297764858882513, 
                    1.}, {1., 0.9297764858882513, 1.}, {1., 
                    0.9297764858882513, 1.}}, 
                    SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4,
                     4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                    SplineClosed -> {True, False}, 
                    Method -> {"SurfaceCaps" -> True}]}], 
                 StatusArea[#, {12, 12, 3}]& , TagBoxNote -> "{12, 12, 3}"], 
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"12", ",", "12", ",", "3"}], "}"}], {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[{12, 12, 3}, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7263, 
                  FEPrivate`Not[DynamicChart`click$7263]], PassEventsDown -> 
                True, Method -> "Preemptive", PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$7263, {{{1., 0, 0}, {0, 1., 0}, {
                 0, 0, 1.}}, {
                0.5968557291956514, -2.3245995867087146`, 0}}, {{1, 0, 0}, {0,
                1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$7263}]], 
            DynamicModuleValues :> {}]}, {
           Directive[
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.1]]], 
            RGBColor[0.813033, 0.766292, 0.303458]], 
           DynamicModuleBox[{DynamicChart`click$7264 = False}, 
            GeometricTransformation3DBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                   BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zggGRGqNbhRO4DUmnHWxZr8B6AiSfe
mbY26gXjgXMKlpfk2YXh4nc2cZou432yf1H7hSkLriPEIeZIQ82RRTNHEGqO
Mpo5X6DmKBMw54c9dnN+2GM354c9bc3hcMBuDocDdnM4HLCHM8wc9HCGmYMe
zhwO2GNxsImTni8An8adsw==
                    "], 
                    SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                    0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {
                    1., 0.9510565162951535, 1.}, {2., 1.902113032590307, 
                    2.}, {1., 0.9510565162951535, 1.}, {1., 
                    0.9510565162951535, 1.}, {2., 1.902113032590307, 2.}, {1.,
                     0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {
                    1., 0.9510565162951535, 1.}, {1., 0.9510565162951535, 
                    1.}}, SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3,
                     4, 4, 4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                    SplineClosed -> {True, False}, 
                    Method -> {"SurfaceCaps" -> True}]}], 
                 StatusArea[#, {10, 10, 3}]& , TagBoxNote -> "{10, 10, 3}"], 
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"10", ",", "10", ",", "3"}], "}"}], {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[{10, 10, 3}, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7264, 
                  FEPrivate`Not[DynamicChart`click$7264]], PassEventsDown -> 
                True, Method -> "Preemptive", PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$7264, {{{1., 0, 0}, {0, 1., 0}, {
                 0, 0, 1.}}, {-0.8515585831301454, -1.8096541049320392`, 
                 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
               0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$7264}]],
             DynamicModuleValues :> {}]}, {
           Directive[
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.1]]], 
            RGBColor[0.812807, 0.518694, 0.303459]], 
           DynamicModuleBox[{DynamicChart`click$7265 = False}, 
            GeometricTransformation3DBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                   BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwP8QF2G+fL4DgS/1zd8f+7wfJh5j
I7JW9Cn3gTn7kw/e28x4ACYuoiAYev456wHRHZeYtwWzH0A1Rw5qDvMBVHOk
oeYIopkjCjVHnIA5P+yxm/PDHrs5P+xpaw6HA3ZzOBywm8PhgD2cYeaghzPM
HPRw5nDAHouDTZz0fAEAMCKX4w==
                    "], 
                    SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                    0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {
                    1., 0.9685831611286311, 1.}, {2., 1.9371663222572622`, 
                    2.}, {1., 0.9685831611286311, 1.}, {1., 
                    0.9685831611286311, 1.}, {2., 1.9371663222572622`, 2.}, {
                    1., 0.9685831611286311, 1.}, {1., 0.9685831611286311, 
                    1.}, {1., 0.9685831611286311, 1.}, {1., 
                    0.9685831611286311, 1.}}, 
                    SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4,
                     4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                    SplineClosed -> {True, False}, 
                    Method -> {"SurfaceCaps" -> True}]}], 
                 StatusArea[#, {8, 8, 3}]& , TagBoxNote -> "{8, 8, 3}"], 
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"8", ",", "8", ",", "3"}], "}"}], {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[{8, 8, 3}, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7265, 
                  FEPrivate`Not[DynamicChart`click$7265]], PassEventsDown -> 
                True, Method -> "Preemptive", PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$7265, {{{1., 0, 0}, {0, 1., 0}, {
                 0, 0, 1.}}, {-1.3509246808032243`, -0.8573228719663947, 
                 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
               0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$7265}]],
             DynamicModuleValues :> {}]}, {
           Directive[
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.1]]], 
            RGBColor[0.72987, 0.239399, 0.230961]], 
           DynamicModuleBox[{DynamicChart`click$7266 = False}, 
            GeometricTransformation3DBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                   BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3ygAcsBzuKb+9fzb9uDLl7iPM8qN/zm
fpiI/FauMxmszAeWPf7NsnrHi/2o6kWg5hzbgy4OMeclmjnCUHN+EDAHFm7o
5vywx24OQj1tzOFwwG4OhwN2c2Dq0cMZIY4azjBz0MMZph4dDDZx0vMFANzb
ggU=
                    "], 
                    SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                    0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {
                    1., 0.9876883405951377, 1.}, {2., 1.9753766811902753`, 
                    2.}, {1., 0.9876883405951377, 1.}, {1., 
                    0.9876883405951377, 1.}, {2., 1.9753766811902753`, 2.}, {
                    1., 0.9876883405951377, 1.}, {1., 0.9876883405951377, 
                    1.}, {1., 0.9876883405951377, 1.}, {1., 
                    0.9876883405951377, 1.}}, 
                    SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4,
                     4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                    SplineClosed -> {True, False}, 
                    Method -> {"SurfaceCaps" -> True}]}], 
                 StatusArea[#, {5, 5, 3}]& , TagBoxNote -> "{5, 5, 3}"], 
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"5", ",", "5", ",", "3"}], "}"}], {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]], Annotation[#, 
                Style[{5, 5, 3}, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7266, 
                  FEPrivate`Not[DynamicChart`click$7266]], PassEventsDown -> 
                True, Method -> "Preemptive", PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$7266, {{{1., 0, 0}, {0, 1., 0}, {
                 0, 0, 1.}}, {-0.9876883405951378, -0.15643446504023098`, 
                 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
               0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$7266}]],
             DynamicModuleValues :> {}]}}}}, {}}, {{}}}}, {
    PlotRange -> {{42., -42.}, {42., -42.}, {0., 3.06}}, Boxed -> False, 
     BoxRatios -> {1, 1, 0.1}, FaceGridsStyle -> Automatic, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, Lighting -> "Neutral", PlotRange -> 
     Automatic, ViewPoint -> {0, -2.4, 2}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"R\"", "\"Stata\"", "\"Matlab\"", "\"Python\"", "\"Markdown\"", 
       "\"Markup Languages\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.237736, 0.340215, 0.575113]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.264425, 0.423024, 0.3849]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.416394, 0.555345, 0.24182]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.813033, 0.766292, 0.303458]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.812807, 0.518694, 0.303459]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.72987, 0.239399, 0.230961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.237736, 0.340215, 0.575113], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.15849066666666667`, 0.22681, 0.3834086666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.237736, 0.340215, 0.575113]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.237736, 0.340215, 0.575113]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.237736, 0.340215, 0.575113], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264425, 0.423024, 0.3849], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.17628333333333335`, 0.28201600000000004`, 
                    0.25660000000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.264425, 0.423024, 0.3849]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264425, 0.423024, 0.3849]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264425, 0.423024, 0.3849], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.416394, 0.555345, 0.24182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.277596, 0.37023, 0.16121333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.416394, 0.555345, 0.24182]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.416394, 0.555345, 0.24182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.416394, 0.555345, 0.24182], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.813033, 0.766292, 0.303458], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.542022, 0.5108613333333334, 0.20230533333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.813033, 0.766292, 0.303458]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.813033, 0.766292, 0.303458]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.813033, 0.766292, 0.303458], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.812807, 0.518694, 0.303459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5418713333333334, 0.345796, 0.20230599999999999`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.812807, 0.518694, 0.303459]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.812807, 0.518694, 0.303459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.812807, 0.518694, 0.303459], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72987, 0.239399, 0.230961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.48658, 0.15959933333333334`, 0.153974], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.72987, 0.239399, 0.230961]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72987, 0.239399, 0.230961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72987, 0.239399, 0.230961], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.671678305805033*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SectorChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35", ",", "35", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", " ", "3"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", " ", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", " ", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Stata\>\"", ",", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Matlab\>\"", ",", "18"}], "]"}], "]"}], ",", " ", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Python\>\"", ",", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markdown\>\"", ",", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markup Languages\>\"", ",", "18"}], "]"}], "]"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671678318593108*^9, 3.6716784352452726`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     RGBColor[0.5, 0.5, 1.], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1]}], {{{}, {{
         RGBColor[0.237736, 0.340215, 0.575113], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.1]}], 
         DynamicModuleBox[{DynamicChart`click$8199 = False}, 
          GeometricTransformation3DBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzB9agHPn2TVBxmGOtdOhWg4wAT
Z0k2F/30g++AhXt7/5pCC7g4VN0BmD4UwxoMD1x3ujGrf58Yhjh2e02g9tqg
2SsHtdcDzV6bAzB9qOY7Qu1VwxAnzt4f9tjt/WGP3V5oOsGwFyGOausP+8Fl
L4cDdns5HLDby+GA3V6EOKq9HA7Y0xXMXvR0BbMXPV3BzEdPVwhxdHsZsIKR
Jk77chIAA//NIw==
                  "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3D+wKpjcICo
+wbnQ9T9g/OHl73UUwcAfN6Cow==
                   "], 
                  SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                    4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]}, 
                ImageSizeCache -> {{-21.230714513861678`, 
                 303.3128733604101}, {-54.31332426588642, 
                 314.0763783747673}}], StatusArea[#, {35, 35, 3}]& , 
               TagBoxNote -> "{35, 35, 3}"], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"35", ",", "35", ",", "3"}], "}"}], {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
              Annotation[#, 
              Style[{35, 35, 3}, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8199, 
                FEPrivate`Not[DynamicChart`click$8199]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], 
           Dynamic[
            If[
            DynamicChart`click$8199, {{{1., 0, 0}, {0, 1., 0}, {
               0, 0, 1.}}, {-3.1779334981768272`, 6.237045669318576, 0}}, {{1,
              0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
             1}}], TrackedSymbols :> {DynamicChart`click$8199}]], 
          DynamicModuleValues :> {}]}, {
         RGBColor[0.264425, 0.423024, 0.3849], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.1]}], 
         DynamicModuleBox[{DynamicChart`click$8200 = False}, 
          GeometricTransformation3DBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzBDha9KwaLFB3iSu8pOrhqHICJ
c9uyVe/4bOIw49BBM9seLrg4VJ0DTB9MPPb0nPuuVaoOUVAa3fxYqD5UcUOo
vRZo9rpA7ZVCs9fCAaYP1V5TqL2mGObHQvXht/eHPXZ7f9hjt/eHPXZ7f9hj
txchPjjs5XDAbi+HA3Z7ORyw28vhgN1eDgfs6QpmL3q6gtmLnq5g9qKnK4T5
qOmKAx7PqGCkidO+nAQALNrhkQ==
                  "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5A6uOwQGi
7hucD1H3H84fXvZSTx0AClOJ5w==
                   "], 
                  SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                    4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]}, 
                ImageSizeCache -> {{-70.57218977264553, 
                 175.33123374787561`}, {-206.0610938312318, 
                 107.73765352584223`}}], StatusArea[#, {30, 30, 3}]& , 
               TagBoxNote -> "{30, 30, 3}"], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"30", ",", "30", ",", "3"}], "}"}], {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
              Annotation[#, 
              Style[{30, 30, 3}, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8200, 
                FEPrivate`Not[DynamicChart`click$8200]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], 
           Dynamic[
            If[
            DynamicChart`click$8200, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
              6., 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 
             1, 0}, {0, 0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$8200}]], 
          DynamicModuleValues :> {}]}, {
         RGBColor[0.416394, 0.555345, 0.24182], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.1]}], 
         DynamicModuleBox[{DynamicChart`click$8201 = False}, 
          GeometricTransformation3DBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwDXOIp5EgRf7Dy1KqO89L34AJs6d
ZauYufanfepu44X5DJJw8R72DW1bzHgc6r5v3DIzS/gAqjk/oOaoo5nD6QAx
RxPNHBmoOcoEzPlhj92cH/bYzflhT1tzOBywm8PhgN0cDgfs4QwzBz2cYeag
hzOHA/ZYHGzipOcLAB39lQE=
                  "], 
                  SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                   0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1.,
                    0.9297764858882513, 1.}, {2., 1.8595529717765027`, 2.}, {
                   1., 0.9297764858882513, 1.}, {1., 0.9297764858882513, 
                   1.}, {2., 1.8595529717765027`, 2.}, {1., 
                   0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1.,
                    0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                    4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]}, 
                ImageSizeCache -> {{85.60882021120673, 
                 166.95385066399376`}, {-101.1644479993387, \
-18.713694224203522`}}], StatusArea[#, {12, 12, 3}]& , TagBoxNote -> 
               "{12, 12, 3}"], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"12", ",", "12", ",", "3"}], "}"}], {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
              Annotation[#, 
              Style[{12, 12, 3}, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8201, 
                FEPrivate`Not[DynamicChart`click$8201]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], 
           Dynamic[
            If[
            DynamicChart`click$8201, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
              0.5968557291956514, -2.3245995867087146`, 0}}, {{1, 0, 0}, {0, 
             1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$8201}]], 
          DynamicModuleValues :> {}]}, {
         RGBColor[0.813033, 0.766292, 0.303458], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.1]}], 
         DynamicModuleBox[{DynamicChart`click$8202 = False}, 
          GeometricTransformation3DBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zggGRGqNbhRO4DUmnHWxZr8B6AiSfe
mbY26gXjgXMKlpfk2YXh4nc2cZou432yf1H7hSkLriPEIeZIQ82RRTNHEGqO
Mpo5X6DmKBMw54c9dnN+2GM354c9bc3hcMBuDocDdnM4HLCHM8wc9HCGmYMe
zhwO2GNxsImTni8An8adsw==
                  "], 
                  SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                   0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1.,
                    0.9510565162951535, 1.}, {2., 1.902113032590307, 2.}, {1.,
                    0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {
                   2., 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {
                   1., 0.9510565162951535, 1.}, {1., 0.9510565162951535, 
                   1.}, {1., 0.9510565162951535, 1.}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                    4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]}, 
                ImageSizeCache -> {{114.79694141824967`, 
                 186.70229381607436`}, {-77.00557953719877, \
-10.065362084452232`}}], StatusArea[#, {10, 10, 3}]& , TagBoxNote -> 
               "{10, 10, 3}"], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"10", ",", "10", ",", "3"}], "}"}], {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
              Annotation[#, 
              Style[{10, 10, 3}, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8202, 
                FEPrivate`Not[DynamicChart`click$8202]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], 
           Dynamic[
            If[
            DynamicChart`click$8202, {{{1., 0, 0}, {0, 1., 0}, {
               0, 0, 1.}}, {-0.8515585831301454, -1.8096541049320392`, 0}}, {{
             1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
             1}}], TrackedSymbols :> {DynamicChart`click$8202}]], 
          DynamicModuleValues :> {}]}, {
         RGBColor[0.812807, 0.518694, 0.303459], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.1]}], 
         DynamicModuleBox[{DynamicChart`click$8203 = False}, 
          GeometricTransformation3DBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwP8QF2G+fL4DgS/1zd8f+7wfJh5j
I7JW9Cn3gTn7kw/e28x4ACYuoiAYev456wHRHZeYtwWzH0A1Rw5qDvMBVHOk
oeYIopkjCjVHnIA5P+yxm/PDHrs5P+xpaw6HA3ZzOBywm8PhgD2cYeaghzPM
HPRw5nDAHouDTZz0fAEAMCKX4w==
                  "], 
                  SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                   0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1.,
                    0.9685831611286311, 1.}, {2., 1.9371663222572622`, 2.}, {
                   1., 0.9685831611286311, 1.}, {1., 0.9685831611286311, 
                   1.}, {2., 1.9371663222572622`, 2.}, {1., 
                   0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1.,
                    0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                    4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]}, 
                ImageSizeCache -> {{114.79694141824967`, 
                 184.79202397437004`}, {-54.70271895843828, \
-8.812442556851096}}], StatusArea[#, {8, 8, 3}]& , TagBoxNote -> "{8, 8, 3}"], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"8", ",", "8", ",", "3"}], "}"}], {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
              Annotation[#, 
              Style[{8, 8, 3}, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8203, 
                FEPrivate`Not[DynamicChart`click$8203]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], 
           Dynamic[
            If[
            DynamicChart`click$8203, {{{1., 0, 0}, {0, 1., 0}, {
               0, 0, 1.}}, {-1.3509246808032243`, -0.8573228719663947, 0}}, {{
             1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
             1}}], TrackedSymbols :> {DynamicChart`click$8203}]], 
          DynamicModuleValues :> {}]}, {
         RGBColor[0.72987, 0.239399, 0.230961], 
         EdgeForm[{
           GrayLevel[0], 
           Opacity[0.1]}], 
         DynamicModuleBox[{DynamicChart`click$8204 = False}, 
          GeometricTransformation3DBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3ygAcsBzuKb+9fzb9uDLl7iPM8qN/zm
fpiI/FauMxmszAeWPf7NsnrHi/2o6kWg5hzbgy4OMeclmjnCUHN+EDAHFm7o
5vywx24OQj1tzOFwwG4OhwN2c2Dq0cMZIY4azjBz0MMZph4dDDZx0vMFANzb
ggU=
                  "], 
                  SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                   0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1.,
                    0.9876883405951377, 1.}, {2., 1.9753766811902753`, 2.}, {
                   1., 0.9876883405951377, 1.}, {1., 0.9876883405951377, 
                   1.}, {2., 1.9753766811902753`, 2.}, {1., 
                   0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1.,
                    0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                    4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]}, 
                ImageSizeCache -> {{114.79694141824967`, 
                 168.12916388971726`}, {-31.45647139499252, \
-13.077558113045598`}}], StatusArea[#, {5, 5, 3}]& , TagBoxNote -> 
               "{5, 5, 3}"], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"5", ",", "5", ",", "3"}], "}"}], {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
              Annotation[#, 
              Style[{5, 5, 3}, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8204, 
                FEPrivate`Not[DynamicChart`click$8204]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], 
           Dynamic[
            If[
            DynamicChart`click$8204, {{{1., 0, 0}, {0, 1., 0}, {
               0, 0, 1.}}, {-0.9876883405951378, -0.15643446504023098`, 
               0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
             0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$8204}]], 
          DynamicModuleValues :> {}]}}}, {}}, {}}, BoxRatios -> {1, 1, 0.1}, 
    Boxed -> False, FaceGridsStyle -> Automatic, 
    ImageSize -> {328.4308357903382, 395.3380292667598}, ImageSizeRaw -> 
    Automatic, LabelStyle -> {
      GrayLevel[0], FontFamily -> "Arial"}, Lighting -> "Neutral", 
    Method -> {"ShrinkWrap" -> True}, 
    PlotRange -> {{42., -42.}, {42., -42.}, {0., 3.06}}, 
    ViewPoint -> {-1.8556120937791403`, -0.5473295151804847, 
     2.4529847450061513`}, 
    ViewVertical -> {-0.16333783343476868`, -0.8491201197610188, 
     5.023104362701107}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox["\"R\"", 18, StripOnInput -> False], TextForm]], 
         "InlineText"], 
        Text[
         Style["R", 18]]], 
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox["\"Stata\"", 18, StripOnInput -> False], TextForm]], 
         "InlineText"], 
        Text[
         Style["Stata", 18]]], 
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox["\"Matlab\"", 18, StripOnInput -> False], TextForm]], 
         "InlineText"], 
        Text[
         Style["Matlab", 18]]], 
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox["\"Python\"", 18, StripOnInput -> False], TextForm]], 
         "InlineText"], 
        Text[
         Style["Python", 18]]], 
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox["\"Markdown\"", 18, StripOnInput -> False], TextForm]], 
         "InlineText"], 
        Text[
         Style["Markdown", 18]]], 
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox["\"Markup Languages\"", 18, StripOnInput -> False], 
           TextForm]], "InlineText"], 
        Text[
         Style["Markup Languages", 18]]]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.237736, 0.340215, 0.575113]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.264425, 0.423024, 0.3849]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.416394, 0.555345, 0.24182]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.813033, 0.766292, 0.303458]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.812807, 0.518694, 0.303459]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.72987, 0.239399, 0.230961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.237736, 0.340215, 0.575113], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.15849066666666667`, 0.22681, 0.3834086666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.237736, 0.340215, 0.575113]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.237736, 0.340215, 0.575113]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.237736, 0.340215, 0.575113], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264425, 0.423024, 0.3849], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.17628333333333335`, 0.28201600000000004`, 
                    0.25660000000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.264425, 0.423024, 0.3849]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264425, 0.423024, 0.3849]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264425, 0.423024, 0.3849], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.416394, 0.555345, 0.24182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.277596, 0.37023, 0.16121333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.416394, 0.555345, 0.24182]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.416394, 0.555345, 0.24182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.416394, 0.555345, 0.24182], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.813033, 0.766292, 0.303458], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.542022, 0.5108613333333334, 0.20230533333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.813033, 0.766292, 0.303458]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.813033, 0.766292, 0.303458]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.813033, 0.766292, 0.303458], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.812807, 0.518694, 0.303459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5418713333333334, 0.345796, 0.20230599999999999`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.812807, 0.518694, 0.303459]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.812807, 0.518694, 0.303459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.812807, 0.518694, 0.303459], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72987, 0.239399, 0.230961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.48658, 0.15959933333333334`, 0.153974], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.72987, 0.239399, 0.230961]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72987, 0.239399, 0.230961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72987, 0.239399, 0.230961], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{3.671678453692359*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SectorChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35", ",", "35", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", "12", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", " ", "3"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", " ", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<R\>\"", ",", " ", "\"\<Stata\>\"", ",", "\"\<Matlab\>\"", ",", 
      "\"\<Python\>\"", ",", "\"\<Markdown\>\"", ",", 
      "\"\<Markup Languages\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6716809744615664`*^9, 3.6716810182676744`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{{}, {
      {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$37007 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1.5]}], {}, {}], 
                BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzB9agHPn2TVBxmGOtdOhWg4wAT
Z0k2F/30g++AhXt7/5pCC7g4VN0BmD4UwxoMD1x3ujGrf58Yhjh2e02g9tqg
2SsHtdcDzV6bAzB9qOY7Qu1VwxAnzt4f9tjt/WGP3V5oOsGwFyGOausP+8Fl
L4cDdns5HLDby+GA3V6EOKq9HA7Y0xXMXvR0BbMXPV3BzEdPVwhxdHsZsIKR
Jk77chIAA//NIw==
                 "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3D+wKpjcICo
+wbnQ9T9g/OHl73UUwcAfN6Cow==
                  "], 
                 SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                   4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                 SplineClosed -> {True, False}, 
                 Method -> {"SurfaceCaps" -> True}]},
               
               ImageSizeCache->{{42.818163372965955`, 
                232.46554065820905`}, {-116.99398343549811`, \
-2.8364485256438314`}}], Text3DBox[
               StyleBox["\<\"R\"\>",
                StripOnInput->False,
                LineColor->GrayLevel[0],
                FrontFaceColor->GrayLevel[0],
                BackFaceColor->GrayLevel[0],
                GraphicsColor->GrayLevel[0],
                FontFamily->"Arial",
                FontColor->GrayLevel[0]], {-10.593111660589424`, 
                20.790152231061917`, 3}, {0, 0}]},
             StatusArea[#, {35, 35, 3}]& ,
             TagBoxNote->"{35, 35, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"35", ",", "35", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{35, 35, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$37007, 
              FEPrivate`Not[DynamicChart`click$37007]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$37007, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-3.1779334981768272`, 6.237045669318576, 0}}, {{1, 
           0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$37007}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$37009 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1.5]}], {}, {}], 
                BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMf9gMjPnzBDha9KwaLFB3iSu8pOrhqHICJ
c9uyVe/4bOIw49BBM9seLrg4VJ0DTB9MPPb0nPuuVaoOUVAa3fxYqD5UcUOo
vRZo9rpA7ZVCs9fCAaYP1V5TqL2mGObHQvXht/eHPXZ7f9hjt/eHPXZ7f9hj
txchPjjs5XDAbi+HA3Z7ORyw28vhgN1eDgfs6QpmL3q6gtmLnq5g9qKnK4T5
qOmKAx7PqGCkidO+nAQALNrhkQ==
                 "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5A6uOwQGi
7hucD1H3H84fXvZSTx0AClOJ5w==
                  "], 
                 SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                   4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                 SplineClosed -> {True, False}, 
                 Method -> {"SurfaceCaps" -> True}]},
               
               ImageSizeCache->{{161., 
                315.4321799329002}, {-74.23332071506167, 53.28263947593307}}],
               Text3DBox[
               StyleBox["\<\"Stata\"\>",
                StripOnInput->False,
                LineColor->GrayLevel[0],
                FrontFaceColor->GrayLevel[0],
                BackFaceColor->GrayLevel[0],
                GraphicsColor->GrayLevel[0],
                FontFamily->"Arial",
                FontColor->GrayLevel[0]], {20., 0., 3}, {0, 0}]},
             StatusArea[#, {30, 30, 3}]& ,
             TagBoxNote->"{30, 30, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"30", ",", "30", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{30, 30, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$37009, 
              FEPrivate`Not[DynamicChart`click$37009]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$37009, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            6., 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$37009}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$37011 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1.5]}], {}, {}], 
                BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwDXOIp5EgRf7Dy1KqO89L34AJs6d
ZauYufanfepu44X5DJJw8R72DW1bzHgc6r5v3DIzS/gAqjk/oOaoo5nD6QAx
RxPNHBmoOcoEzPlhj92cH/bYzflhT1tzOBywm8PhgN0cDgfs4QwzBz2cYeag
hzOHA/ZYHGzipOcLAB39lQE=
                 "], 
                 SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                  0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1., 
                  0.9297764858882513, 1.}, {2., 1.8595529717765027`, 2.}, {1.,
                   0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {2.,
                   1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {
                  1., 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {
                  1., 0.9297764858882513, 1.}}, 
                 SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                   4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                 SplineClosed -> {True, False}, 
                 Method -> {"SurfaceCaps" -> True}]},
               
               ImageSizeCache->{{155.72666543994956`, 
                187.7307772779322}, {-25.982098571360858`, 
                25.04558567720364}}], Text3DBox[
               StyleBox["\<\"Matlab\"\>",
                StripOnInput->False,
                LineColor->GrayLevel[0],
                FrontFaceColor->GrayLevel[0],
                BackFaceColor->GrayLevel[0],
                GraphicsColor->GrayLevel[0],
                FontFamily->"Arial",
                FontColor->GrayLevel[0]], {
               1.989519097318838, -7.748665289029049, 3}, {0, 0}]},
             StatusArea[#, {12, 12, 3}]& ,
             TagBoxNote->"{12, 12, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"12", ",", "12", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{12, 12, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$37011, 
              FEPrivate`Not[DynamicChart`click$37011]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$37011, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            0.5968557291956514, -2.3245995867087146`, 0}}, {{1, 0, 0}, {0, 1, 
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$37011}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$37013 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1.5]}], {}, {}], 
                BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zggGRGqNbhRO4DUmnHWxZr8B6AiSfe
mbY26gXjgXMKlpfk2YXh4nc2cZou432yf1H7hSkLriPEIeZIQ82RRTNHEGqO
Mpo5X6DmKBMw54c9dnN+2GM354c9bc3hcMBuDocDdnM4HLCHM8wc9HCGmYMe
zhwO2GNxsImTni8An8adsw==
                 "], 
                 SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                  0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1., 
                  0.9510565162951535, 1.}, {2., 1.902113032590307, 2.}, {1., 
                  0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {2., 
                  1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {1., 
                  0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1., 
                  0.9510565162951535, 1.}}, 
                 SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                   4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                 SplineClosed -> {True, False}, 
                 Method -> {"SurfaceCaps" -> True}]},
               
               ImageSizeCache->{{137.1869359773868, 
                163.}, {-25.982098571360854`, 19.121474644769986`}}], 
              Text3DBox[
               StyleBox["\<\"Python\"\>",
                StripOnInput->False,
                LineColor->GrayLevel[0],
                FrontFaceColor->GrayLevel[0],
                BackFaceColor->GrayLevel[0],
                GraphicsColor->GrayLevel[0],
                FontFamily->"Arial",
                
                FontColor->GrayLevel[
                 0]], {-2.838528610433818, -6.032180349773463, 3}, {0, 0}]},
             StatusArea[#, {10, 10, 3}]& ,
             TagBoxNote->"{10, 10, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"10", ",", "10", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{10, 10, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$37013, 
              FEPrivate`Not[DynamicChart`click$37013]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$37013, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.8515585831301454, -1.8096541049320392`, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$37013}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$37015 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1.5]}], {}, {}], 
                BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3zgwP8QF2G+fL4DgS/1zd8f+7wfJh5j
I7JW9Cn3gTn7kw/e28x4ACYuoiAYev456wHRHZeYtwWzH0A1Rw5qDvMBVHOk
oeYIopkjCjVHnIA5P+yxm/PDHrs5P+xpaw6HA3ZzOBywm8PhgD2cYeaghzPM
HPRw5nDAHouDTZz0fAEAMCKX4w==
                 "], 
                 SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                  0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1., 
                  0.9685831611286311, 1.}, {2., 1.9371663222572622`, 2.}, {1.,
                   0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {2.,
                   1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {
                  1., 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {
                  1., 0.9685831611286311, 1.}}, 
                 SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                   4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                 SplineClosed -> {True, False}, 
                 Method -> {"SurfaceCaps" -> True}]},
               
               ImageSizeCache->{{134.85839577171487`, 
                163.}, {-25.982098571360858`, 9.91506076331364}}], Text3DBox[
               StyleBox["\<\"Markdown\"\>",
                StripOnInput->False,
                LineColor->GrayLevel[0],
                FrontFaceColor->GrayLevel[0],
                BackFaceColor->GrayLevel[0],
                GraphicsColor->GrayLevel[0],
                FontFamily->"Arial",
                
                FontColor->GrayLevel[
                 0]], {-4.50308226934408, -2.8577429065546487`, 3}, {0, 0}]},
             StatusArea[#, {8, 8, 3}]& ,
             TagBoxNote->"{8, 8, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"8", ",", "8", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{8, 8, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$37015, 
              FEPrivate`Not[DynamicChart`click$37015]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$37015, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-1.3509246808032243`, -0.8573228719663947, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$37015}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       DynamicModuleBox[{DynamicChart`click$37017 = False}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   RGBColor[
                   0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                   AbsoluteThickness[1.5]}], {}, {}], 
                BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOfthTR3ygAcsBzuKb+9fzb9uDLl7iPM8qN/zm
fpiI/FauMxmszAeWPf7NsnrHi/2o6kWg5hzbgy4OMeclmjnCUHN+EDAHFm7o
5vywx24OQj1tzOFwwG4OhwN2c2Dq0cMZIY4azjBz0MMZph4dDDZx0vMFANzb
ggU=
                 "], 
                 SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                  0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1., 
                  0.9876883405951377, 1.}, {2., 1.9753766811902753`, 2.}, {1.,
                   0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {2.,
                   1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {
                  1., 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {
                  1., 0.9876883405951377, 1.}}, 
                 SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                   4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                 SplineClosed -> {True, False}, 
                 Method -> {"SurfaceCaps" -> True}]},
               
               ImageSizeCache->{{144.03940361551685`, 
                163.}, {-25.982098571360858`, 0.4998291450634369}}], Text3DBox[
               StyleBox["\<\"Markup Languages\"\>",
                StripOnInput->False,
                LineColor->GrayLevel[0],
                FrontFaceColor->GrayLevel[0],
                BackFaceColor->GrayLevel[0],
                GraphicsColor->GrayLevel[0],
                FontFamily->"Arial",
                
                FontColor->GrayLevel[
                 0]], {-3.2922944686504585`, -0.5214482168007699, 3}, {0, 0}]},
             StatusArea[#, {5, 5, 3}]& ,
             TagBoxNote->"{5, 5, 3}"],
            StyleBox[
             RowBox[{"{", 
               RowBox[{"5", ",", "5", ",", "3"}], "}"}], {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[{5, 5, 3}, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$37017, 
              FEPrivate`Not[DynamicChart`click$37017]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$37017, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.9876883405951378, -0.15643446504023098`, 0}}, {{
           1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
           1}}], TrackedSymbols :> {DynamicChart`click$37017}]],
        DynamicModuleValues:>{}]}}}, {}}, {}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{42., -42.}, {42., -42.}, {0., 3.06}},
  ViewPoint->{0, -2.4, 2}]], "Output",
 CellChangeTimes->{
  3.6716810202300806`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
wdCnl85N5icdiuc5Jus05Svi1ekOdKfw5Hooq6mFkJx0m1c3WOpabq/RsbwL
q87Dk6Fuoarq+Futjt8x7FKeBxzoITDru5Bpu2RDH3zypy+0X0+dI23q/ad/
i8g0MYqeqwKHvndVYMijanPFMYNGATaFAibvNvPImm22ZU9ezrhMBQMlGqA5
FrptlWPMGoHRvupRgWJjjVmzTGQX8c+HiMhbjimSixWCi3gwn4Qn00XoYnRR
mq6bW9IIkYXZEIBcdHtjTPHAb4wJG+zFQBovB3/jxHCPZvSKwWqv8nF1t5jU
yebUpfl55qKJmFfy1IZ5C+9gJCjhCPifqbna+vcZ7kMHPJ3ziHtEap3fo6ZR
blw0DKkRlWqplBxGkMUrd2PaaRhTEx/nKamVMKpIHydP/XYptKzGjiPP6Dmo
wCrJvEp6cpfniBosrOLjqh0TdTZSgYEYyZfGW9Ct6JYzo+ZBVnEDlDbUQhBa
yaG9dMzDm+WabSzmAMzUSqrDPb4qY8gefpgpCKWF/l9z4hAN0zrk72TPldaS
kiT/hHYxQRlhHGiujcfBraHmSV6W5H6uKbmPrbKLPNV6lMiVwgrsmWkffSpJ
fkq/ZR6CaikXGpZSZ2eHzk5299pIAVtMq9WUlpOXWmarDxFO8HaywjmNd2bu
Ee3p4nQTutmsmFZIyGqCsoY6CCnJHfCVaeandW1euOQWZFo4aHmnw4hLmTpg
O97qUsdbHfzr7xRkIg2L1/XCx+i04wQN/TSn/ciz3HXCxTxVYK/9VIEfy2lb
I85ZSsSp1psGoaRiLO2jTqPuxANVpglhqsFUEyOLA0daak5cNZwGNU30dBK1
sKMib9IXL2Kei7YwN5+iE1AjYZMgIV0KL0uX5lvgreiWPCs1rhPyy9qhqK4O
RVMk3LQMHz29Ntf8ZmTLS7K1rGe+x1epjhjAJg6am5vm5Oqv9F8CJRv74aX3
34lXeaj4aBT2XBoXzVJ99IDzsYboo4ccPk6xFJHMlU83Jtq4bffUXFZATWGk
YSDn6gbS6r41NkoXroeUhqFEejiJJ9h/g5Q6MbGbyCvs+hSNoOH0bBf+5+Iv
JkjKudOOwlWNenQv1gK8N7WBQomYrC4oqK6BlLoKhX5aBlP6/d/abPbLI3+c
RMbboCEupZuWw8sfvONIEBz0l3XLf1DCXbmSI6bv4ZK5bum69DHN8R74ZrF8
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"35", ",", "30", ",", "12", ",", "10", ",", "8", ",", "5"}], 
     "}"}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", " ", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<R\>\"", ",", " ", "\"\<Stata\>\"", ",", "\"\<Matlab\>\"", ",", 
      "\"\<Python\>\"", ",", "\"\<Markdown\>\"", ",", 
      "\"\<Markup Languages\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671681098754664*^9, 3.671681105398382*^9}, {
  3.671681147271137*^9, 3.6716811686202984`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$40137 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMH9gMjPnxBXFQpi/L5S/YrvkyfXf74Jtz/
GpldMUGBe/Y3L2cL8I18BheHqtsP04dq2oP96xM9f1efPoIhjt3eR1B7X6LZ
ewZq7zc0e1/uh+lDNe0D1N4rGOLE2fvAHru9D+yx2wtLJ+j2IsTR/G8/uOz9
gMPeDzjs/YDD3g847P1gjz1dwexFT1cwe9HTFcx89HSFEEe3lwErGGnitC8n
AWks8us=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3D+wKpjcICo
+wbnQ9T9g/OHl73UUwcAfN6Cow==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{42.81816337296597, 
               232.46554065820902`}, {-116.99398343549805`, \
-2.836448525643789}}], Text3DBox[
              StyleBox["\<\"R\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {-0.3026603331596978, 
               0.5940043494589119, 1}, {0, 0}]},
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$40137, 
             FEPrivate`Not[DynamicChart`click$40137]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$40137, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.09079809994790936, 0.1782013048376736, 0}}, {{1, 
          0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$40137}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$40139 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJWIAaxsYMH9gMjPnxBXFQpi/L5S/YrvkyfXf745n6Y
ePNytgDfyGf2GpldMUGBe+DiUHX2MH0w8SD75QKXX1yzD4DSOMxHE38EFX+J
Zu83qL1n0Ox9aQ/Th2rvM6i9z3CZT8DeB/bY7X1gj93eB/bY7X1gj91eDPEB
tvcDDns/4LD3Aw57P+Cw94M99nQFsxc9XX2wx56uYPaipysM8+HiDFjBSBOn
fTkJANe1J+Q=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgAWJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5A6uOwQGi
7hucD1H3H84fXvZSTx0AClOJ5w==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{161., 
               343.15867167642847`}, {-81.65397003237965, 
               63.47184963044816}}], Text3DBox[
              StyleBox["\<\"Stata\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {0.6666666666666666, 0., 1}, {0, 0}]},
            StatusArea[#, 30]& ,
            TagBoxNote->"30"],
           StyleBox["30", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[30, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$40139, 
             FEPrivate`Not[DynamicChart`click$40139]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$40139, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.2, 0, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
          0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$40139}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$40141 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOHthTR3zgwJPohbGvuTbsZ7rZEJK+//5+mHjs
Rw0xN7mD9m9rlMS+rnqAEI8qZVE+f8l+xZfps8sf39yPas4BqDnv0cy5CDXn
A5o5j6DmvCRgzgN77OYAxbGa88CetuZ8wGHOBxzmfLDHHs4wc9DDGWYOejh/
wJF+Bps46fkCABKques=
                "], 
                SplineWeights -> {{1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}, {2., 1.8595529717765027`, 2.}, {1., 
                 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}, {1., 0.9297764858882513, 1.}, {1., 
                 0.9297764858882513, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{144.39827969100418`, 
               240.85841059710285`}, {-25.982098571360808`, 
               84.79930526510961}}], Text3DBox[
              StyleBox["\<\"Matlab\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              0.16579325810990314`, -0.6457221074190873, 1}, {0, 0}]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$40141, 
             FEPrivate`Not[DynamicChart`click$40141]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[
         DynamicChart`click$40141, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.04973797743297095, -0.19371663222572622`, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$40141}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$40143 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOHthTR3zggIiCYOj551f3i+64xLwt+Pp+mPi5
ySo135ed2f94Vl/zmcJ7cPEn0QtjX3Nt2M90syEkff/9/ajmPIWa8xzNnDtQ
c96hmXMAas57AuY8sMduzgN77OY8sKetOR9wmPMBhzkf7LGHM8wc9HCGmYMe
zh9wpJ/BJk56vgAAqh3Fow==
                "], 
                SplineWeights -> {{1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}, {2., 1.902113032590307, 2.}, {1., 
                 0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}, {1., 0.9510565162951535, 1.}, {1., 
                 0.9510565162951535, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{70.8433277350642, 
               163.}, {-25.982098571360808`, 80.15776322091244}}], Text3DBox[
              StyleBox["\<\"Python\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               
               FontColor->GrayLevel[
                0]], {-0.2838528610433818, -0.6032180349773463, 1}, {0, 0}]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$40143, 
             FEPrivate`Not[DynamicChart`click$40143]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$40143, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.08515585831301455, -0.18096541049320392`, 0}}, {{
          1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
          TrackedSymbols :> {DynamicChart`click$40143}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$40145 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOHthTR3zgwP8QF2G+/Hv7A1/qm78/dng/TDzG
RmSt6NPb++fsTz54b/NFuLiIgmDo+edX94vuuMS8Lfj6flRz3kHNuYxmzmuo
OQ/RzHkKNec5AXMe2GM354E9dnMe2NPWnA84zPmAw5wP9tjDGWYOejjDzEEP
5w840s9gEyc9XwAA4Di8tQ==
                "], 
                SplineWeights -> {{1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}, {2., 1.9371663222572622`, 2.}, {1., 
                 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}, {1., 0.9685831611286311, 1.}, {1., 
                 0.9685831611286311, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{39.43230351540282, 
               163.}, {-25.982098571360808`, 56.387176896614164`}}], Text3DBox[
              StyleBox["\<\"Markdown\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               
               FontColor->GrayLevel[
                0]], {-0.56288528366801, -0.3572178633193311, 1}, {0, 0}]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$40145, 
             FEPrivate`Not[DynamicChart`click$40145]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$40145, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.16886558510040303`, -0.10716535899579933`, 0}}, {{
          1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}],
          TrackedSymbols :> {DynamicChart`click$40145}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$40147 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWJmKMYOHthTR3ygwYP97DEixmrLJu5BF+8/v/H3B9ct
+2Ei/0NchPny7+0PfKlv/v7Y4f2o6j9AzVm4B10cYs4RNHPeQc25TMAcWLih
m/PAHrs5CPW0MecDDnM+4DAHph49nBHiqOEMMwc9nD/gSD+DTZz0fAEAlLiY
uw==
                "], 
                SplineWeights -> {{1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}, {2., 1.9753766811902753`, 2.}, {1., 
                 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}, {1., 0.9876883405951377, 1.}, {1., 
                 0.9876883405951377, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 
                  4}, {0, 0, 0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{38.91430784410129, 
               163.}, {-25.982098571360815`, 21.165156146776077`}}], Text3DBox[
              StyleBox["\<\"Markup Languages\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               
               FontColor->GrayLevel[
                0]], {-0.6584588937300917, -0.10428964336015398`, 1}, {0, 0}]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$40147, 
             FEPrivate`Not[DynamicChart`click$40147]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$40147, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.19753766811902754`, -0.0312868930080462, 0}}, {{1,
           0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$40147}]],
       DynamicModuleValues:>{}]}}, {}}, {{}, {}, {}, {}, {}, {}}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{1.2, -1.2}, {1.2, -1.2}, {0., 1.02}},
  ViewPoint->{0, -2.4, 2}]], "Output",
 CellChangeTimes->{3.671681108669705*^9, 
  3.6716811715473967`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWd0HNeVNdpfNwJJyZbDeBwkUcyZBJGInHPOOWcSRCBAgAkZzDlnkZQo
USRF5ZytnGXlRCrYHtsay5pgS/bM971Za79zzq2qrk4gKOmt9348rHWrG9Xd
1dV19j5nn3Nv3ZtV17O0qb2uZ1lD3ZSU7roVS5c1rJyS3NlNu2z/y2L5X4kW
i+X1KRZ+DnqqbeQviTfaP///c4/PD8mDFz78+D28+sYLePU33F604rXfvPgj
vPbmixYbP8WHF9+Tdx5UH9suDz/FN1//Fe++/RLee1e19997Cfv3rMTWLevQ
saoB9e2FqO8oRENnISLS58Iv+lr4xVyHxbHXwT+O2/Xwj78eAfHXW6wISLje
F4GJk60ITJps8UFQ0mQEJU7mXdJichagpafYiuaVxZYJaOouRmNXEQa3dOF1
OonX3+L2Ip81/vb1X9U5WjbKw0/w6afv49131Gnu3d2NwXUlGO4vxarudBTn
T0FZ4VRUFE9DZck0VJdNR0tTPuKyAvjU+MToBK5X50ZnRRcsKHkyglNu0JsV
S1JvoN1L0qYgxN6sCEmfYkNo+pRJCM2YauVnlqvk1SWp3OjDyTegYlkaWnpL
+HdhaGu38Ws+uvS+dv6WIXn4J7ni77z9ovyUvbu60b+WPtJXgpqKRSjOm4LS
gqkoL9J+Rul01NBPqa2YgbrKGaivmomG6ploqpmF9rZqJOQFWvnkLb5yJnxG
ct7pU/g86YS5TSXDhGVOpd8WnjWV2jSEZ09DRPY0KyJyphE8InOmIzJXGr2V
trTJm04vROVN52fy3wR5+Rp5M32MPy/H4WPS0fl75HsTChdh6aoSuRrD27rx
hnYlyJ7aJbD0ycMN+PST9wR7u3d2oW9NMbo70lCQfQOKcu1XgQ1aRVeBDVpb
TlehwvEqNNfOQkvdLCytn41lDbPR2jgHLQ1xSC4M0n++nJ7+0/m0+VfL76Qf
xT8xKn8GorkVzEBMIbeZiCmaidiimVbEFs+kKxdXPAtxJUazIr5klg/iS2d5
8b/EI34DvZU/I02OUaiOyceWS5mrLh1fNrlkdLmq2tLlcg1vXymX6uNP3teu
j2W1PMyQy8SA2b1DXaaKkgXqMmlg0XFfVWK6TASWBrpMjdplcr5EbU1z0N4y
Fx1L56Jz2TysaJ2Hhjo/xOXPV1Dgy0LNflm0n1ZMl4R/sS//eCSUzVatfDYS
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
o/QvqtCOjfv2ux+O8U/xLxvz/+O581f/B1+pZXM=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"35", ",", "30", ",", "12", ",", "10", ",", "8", ",", "5"}], 
     "}"}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", " ", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<R\>\"", ",", " ", "\"\<Stata\>\"", ",", "\"\<Matlab\>\"", ",", 
      "\"\<Python\>\"", ",", "\"\<Markdown\>\"", ",", 
      "\"\<Markup Languages\>\""}], "}"}]}], ",", " ", 
   RowBox[{"SectorOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671681219365363*^9, 3.6716812410878143`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$42072 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxocCBAQU8sEcTd0ATZ0AXX5/o+bv69JP96OJx
UaUsyuc/7V/xZfrs8sc/7XGYDwUfcNj7AYe9H3DY+wGHvTBzfqCZhy7+A009
DCDE24Te/bA0vL8fXbyXfUPbFrM3++u+b9wyM+szmjno5qGLE1YH8e+V/eji
EP8+gvr3JQHzHuCQR49fhDh2ex/gsBfdfHSAy13o8gwM2O1lYMBuLwygxy+6
OCF5Bgbs8cvAgD1+4cABu7no6RmnPAP29AzzL3p6xmUv7fMvADZBx6Y=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3A+VKEDRN03
OB+i7h+cP2oedvMADtZbtg==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{91.53445934179095, 
               281.18183662703404`}, {-93.56390402010733, \
-2.836448525643817}}], Text3DBox[
              StyleBox["\<\"R\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              0.6809857496093202, 1.3365097862825517`, 1}, {0, 0}]},
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$42072, 
             FEPrivate`Not[DynamicChart`click$42072]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$42072, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.09079809994790937, 0.17820130483767357`, 0}}, {{1, 0, 0}, {0, 1, 
          0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$42072}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$42074 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxY6NKWZTPf9q/4sv02eWPf9ozgMED+6blbAG+
kWwHdDK7YoIC78DFoer2w/TBxIPslwtcfvFtvx+UhonHQ9Uth+qDiWO39wMO
ez/gsPcDDns/4LD3g30P+4a2LWZv9td937hlZtZnuPmL/rL8+XmI4cCDc+lH
/9pchYtD1e2H6YOL59f6zNP7uL8aSsPE+6DqaqH6YOIQdz+C+vclmn+/7Yf4
9wyaf1/uh+lD9e8zqH+fofn3EdS/LwnY+wCHvQ9w2PsAh70PcNj7AIe9DAzY
7WVgwG4vAwN2exkYsNvLwIA9fhkYsMcvAwP2+AWKY41fBgbs8YsrH8H8i56e
Yf5FT88w/6KnZ5h/0dPzwOVfAHdrunY=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5UIUOEHXf
4HyIuv9w/qh52M0DALHYYSk=
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{-19.158671676428384`, 
               131.53929762239719`}, {-81.65397003237965, 
               63.47184963044813}}], Text3DBox[
              StyleBox["\<\"Stata\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {-1.5, 1.8369701987210297`*^-16, 
               1}, {0, 0}]},
            StatusArea[#, 30]& ,
            TagBoxNote->"30"],
           StyleBox["30", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[30, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$42074, 
             FEPrivate`Not[DynamicChart`click$42074]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$42074, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.2, 2.4492935982947065`*^-17, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$42074}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$42076 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKI6PKmVRPv9p//Iv02eXP/65nwEMHtgnfNQQc5N7
uP9djZLY11UMB2Di96IXxr7mumDPdLMhJH3/f7h67OZ8wGHOBxzmfLDvY9/Q
tsXszf7a7xu3zMz6DBfnz7JVzFx7c3/KbuOF+QwI889wFvEkCpywP7Qoob73
/He4OMQ9j6DueYnmnotQ93zYj+qeA1D3vCdgzgMc5jzAYc4DHOYwMGA3h4EB
uzkMDNjDh4EBe/gwMGAPH1zxDnMPenzB3IMeX9RLPwDHzgJa
                "], 
                SplineWeights -> {{1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{83.14158940289714, 179.60172030899582`}, {
               5.501975257086698, 84.79930526510961}}], Text3DBox[
              StyleBox["\<\"Matlab\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               
               FontColor->GrayLevel[
                0]], {-0.37303483074728294`, -1.4528747416929464`, 1}, {0, 
              0}]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$42076, 
             FEPrivate`Not[DynamicChart`click$42076]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$42076, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.049737977432971064`, -0.19371663222572622`, 
            0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0,
           0, 1}}], TrackedSymbols :> {DynamicChart`click$42076}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$42078 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKL4fvTD2NdcFe+abDSHp+//vZwCDB/bnJqvUfF/2
xv7JrL7mM4X/4OLCCoKh559/tRfbcYl5W/B3uDh2cz7gMOcDDnOA6jmLeBIF
TtgfWpRQ33seIX4rT3quZe1Te+0vq5Iir36Di/PdOFN/O/eDvSDXvaYTdR/h
4hD3HIC65z2ae+5A3fMOzT1Poe55TsCcBzjMeYDDnAc4zGFgwG4OAwN2c4Dq
sYYPAwP28GFgwB4+uOId5h70+IK5Bz2+qJd+ADmNBuA=
                "], 
                SplineWeights -> {{1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{168.53740453825367`, 253.1566722649358}, {
               2.264678724811361, 80.15776322091243}}], Text3DBox[
              StyleBox["\<\"Python\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              0.6386689373476089, -1.3572405786990294`, 1}, {0, 0}]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$42078, 
             FEPrivate`Not[DynamicChart`click$42078]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$42078, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.08515585831301453, -0.18096541049320392`, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$42078}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$42080 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKBZWEAw9//yrvdiOS8zbgr/vZwCDB/bRNiJrRZ/+
tp+3P/ngvc0f4eL/Q1yE+fL/2Ye81Dd/f+wxXBy7OR9wmPMBhzkf7PlunKm/
nfvBXoDrXtOJOoR6F93zjhdef7HPnS+qdK73FVx8n31xn9flb/b/7h6/lLbq
Llwc4p6nUPc8R3PPa6h7HqK55x3UPZcJmPMAhzkPcJjzAIc5DAzYzWFgwG4O
AwP28GFgwB4+DAzYwwdXvMPcgx5fMPegxxf10g8ALDwA3A==
                "], 
                SplineWeights -> {{1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{201.27726207655707`, 
               284.5676964845972}, {-14.272408843945414`, 
               56.38717689661415}}], Text3DBox[
              StyleBox["\<\"Markdown\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              1.266491888253022, -0.8037401924684957, 1}, {0, 0}]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$42080, 
             FEPrivate`Not[DynamicChart`click$42080]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$42080, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.16886558510040295`, -0.10716535899579943`, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$42080}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$42082 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKP4f4iLMl//PPuSlvvn7Y4/3M4DBA/v/EGC/8PzG
3x9cr8DFITSDA4Q6sgeuHqs5H3CY8wGHOR/s99sX93ld/mb/7+7xS2mr7qKZ
892+aHtX5cuMc2jm/IDSe+DmQNzzDuqey2jmvIe65wiaOTB6CwFzHuAw5wEO
cx7gMAcY/ljNgQF0cxgYsIcPzBz08IEB9PDBFe8wc9DjCw4cINQRAuaQnn4A
Tk7toQ==
                "], 
                SplineWeights -> {{1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{216.0812194351265, 
               285.08569215589876`}, {-25.982098571360837`, 
               21.165156146776056`}}], Text3DBox[
              StyleBox["\<\"Markup Languages\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              1.4815325108927064`, -0.23465169756034665`, 1}, {0, 0}]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$42082, 
             FEPrivate`Not[DynamicChart`click$42082]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$42082, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.19753766811902754`, -0.03128689300804622, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$42082}]],
       DynamicModuleValues:>{}]}}, {}}, {{}, {}, {}, {}, {}, {}}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{2.4, -2.4}, {2.4, -2.4}, {0., 1.02}},
  ViewPoint->{0, -2.4, 2}]], "Output",
 CellChangeTimes->{
  3.671681242149541*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXd4lNUWNT7fTBLArrfYu/TeewmEdNJII70TaoAQeu8oIE1RAZEmCIpg
w96uUqVYEBF71ysWmuVe3b+99jlvnZkkqPf5fX98PM95p2QyzJy19tpr73Pe
N/0KR5eXDiscPai48IaoUYUjygcVV94QWTGKn/L9H4/n/0R4PJ7XbvDgPvFd
fZB/fXHQD/7ffcf9xXLjox9P/kB7D7xK+w686vHSvoO7PPVo/8FdtP/QLpow
s4IKh/anwmH9qWhYKhUP51GBkeYJoZIRafz7JSPTqFQNfoRjqDzHP5WB10+e
M5J/9trh3fxb+w/vot37XqSDB16i06d/VB/DM09uLrF/GnwWGj+jggoGp8in
wCdIK+xLzbtdRS16XE0te15DrXpdQ63DMa6lNr2v9VKbPtd66lDbiOuobd/r
qJ0xIq+j9jKu5y/ZPup6L3WIuv486hB9vTz0nE/hCS2ovDSBZk5JpIXzcmjB
3ByaPzub7llRRceO7qV3eBw9sofOnP5Rf1rPDLm5TH3o19SHfvixzZQ/KIUK
hvSn/vl9qVnXq6h596AfGJ+XPy3GdV58VJ4h9WGvx+fSHzX6ep7UDtE3UMcY
24i9gb9LJz6GUKe4G3jcaIw61Dn+Rh916Xej51KKSm9PI4bn0YjBTWjEoCZU
MagxDS9vTMMGNqahZY1oSGkjGlTckOZMT6JFt+bKF9/1r2107B3+0m/zFz7z
o/6mnsmuLwykxk8fLl84JS+Cmna+Un9h/rLyha+2vnDvIF/YZ//CnoDfNvYG
+Z5efDcfvht/5S79bqIuCTdRVzW81DXxJv69bok3U7ck20i+2RNG3fnoo8iM
1jRsSDSNHdGMH+F4CY0Z0YzGVDSjquHNaPTwplQ5rCmNGtqURg5Rs4WZwizN
nZlEt9+WS2tWjaV331F04JlRM+IZLzf/oLePvSkTs+3RzZRXnkwpuX2oSSee
lC5XKtqaTFAT0ypcTY5rYmyc1XyVGbnemhX7jHhlRs4H3M5ZSbzJmo7kmzEJ
1D3lFuqRcgv/Yo/+t/As9ux/C/VMxahPPdPq+6hXWn0v9UrnQ3h6fZ6lmKy2
NGJENk0d25I/wxQ+XkZTxrSkyRhVLWlSVQuaOLoFTahsQeNHNadxI5tjZmU+
MZeYxwqew/mzkmnxbXm0+9VtMn88d2rSPFUuUsncDUymDn0a8NxdQU27aFLJ
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
9Pz6XHprSSH9uCqPfl2TK23MX8EpJhZ2eYJTFq+8IJbKU+fXllPCKC8Yhdxm
N5rMUXS5sGz87m3JUlNgtU+2+IxPoO8/Pd7WTqkrlELZc5MYS2s7AFaDsckD
WwGkIVqaY2sv1FhH1q6MvBhsQi1ZxZOaNGkUlYwvRTtcL+s55SkkCLOEVVFa
mCBFobJnyKTRWrnEEVZc7osMwTayutgSyo9H3Z5A99xRistR8aR+zccw2Rr5
jTHez5B9sP/+gLn27QeZ/CvY9X5CxgBPQOqZeqdY5wtgjLwmCUPOhXVerWjf
fphDe3fm0Oa5ZfTFinyuddZIv1UTjrlmCVmIJWJKyKrl25bq+Ha+xbfNqtWF
Dj1WClHUYAcS9hE+wQXN/g3zNMs8bTTZTP0St6vSoXK6raWKkaI1LoLap/WT
/WHYdmCsGqNt+peQTTJhmJAtRLSrcFIuVa2Mhdu9JADffCbf9H4z8O0im5JF
WQrm5Jq6rNYatUUVW1XHrDav6jh6ZYScaVB5Tx+e2cq7+8BX3a0vBnlXb/5o
OIbRKFwUkkfFpDx6+cksuSbRJ0fSvDjpkhMU9mbjUlfYk4/TMLC586t31aXV
DA5r7srefZO4H6lLsTFp+b+3J+ksnZ4N1opWhlRLU7WkUMdOUzrwryLatSmb
np1bQN+vlIr8Xtk1y/z8xTY0X70Osjpd/F9CVv4d1mD67q4B0v7HkjY2VGEz
1RMTRBg1S/XN5VoZXYlWO/ZGPbvIUpFRkmG5sTeWG4cVO/v7fkQdUV2SlZJM
CrPRsliEJr/X5Gxdzdn+XHwXjRtMo2cWgpUXBeCsNxBnu5p8NbKtyVXmqcFR
nBKBrdU4PQJkxKmvOGUCp0UNXdyD5t1fTEsfqqAlD1bQ4q3DafGW4XQ7xgPD
adEDw2jR5mHq9gH1HH42e12RnIIxkmf8uUdT5VJIOEMMZxRgGzIuTPHeoRQ5
ywBnluAsso+PpMqJxYrhNnYbzH7fyexgrNYybNlMYXVIzaw2FsW++ziXnn+8
kLbNLaHjy/J9qALRbuJakCkttPbVIL7OwkTx+fJzSfbKPO7QBhKNRv49/O9Y
Y4B5xN4wdBvQQH5t4zyDy60dVWhrVYfoLH9DG20apQbpZatBBlB4uW4d2ZY8
42rYqmMsebr6CheCuudr6qZMraIMjo3y+f1UjygIddnrTr5fX61U7+tWemvT
WRdvRzNnIZS4AtnYu+Np2cMjaMnWClp4/zDa9eYT9O6nh+jYJ4fonY8P0tEP
D9CZn07CPMmOg9NnT9Lb779Gn356kL7/9nX64cTr9PnHT9Helyrp8J4xdOS1
sbTnuVQ5mxEnSYC/b2vuHjd4C86+ZXHWj692JVYqLM5B8TRU8dQqiVAKqRIo
EFUVN0Nl48jeHczPeYX03T1cGq+WYucvIeh51RPU6oqZWgt+PqzXwaS4yZZt
INiejG1n0tieqLS2tZ2ff7NcKLTWZgpw7iYcKPYFuQsa/y62fTk+1MlNtZUM
+zn8CCpNkYs0QROnjKZsdhiDJ5WgnjlPbTQFIy+zGKlZKWpqKKnBRigop3Yo
54KtpcLCdU/NoeOfKfZ9/OW718l3vpa+O3GcTnxzWAj3xv5b6dDuKjq8a4hc
zwmn1OHUOpAMZ1XiOnIQxmAEUzbVQS5DCG1+VKd1F6t8ugGLpuuJj5TWbZpV
RO8uwzlJZ1ejObM6R8leiJ1VyOWKWD6jxpES50+zyujBMavOU0sneBrlDb/T
D3dnSQ/9jTmJstkdvTe2mppQrXTyNvrmInju5K37qXCZXfPSrcV5x4ppkH1C
teuTC6cu1QUNPOawiYU0YWWip25gxbs/2nOhjVdWdgancMEJZOOFD5bRsm0j
aO/bO0XNzv58ytNIf99ffzlF3359mD776Cna93IlHXhliJx3/ZoQSakVsuz7
h1V2xWlfQqJ3nCRyKJTKpjqThihvaCmURSNZ62VvZ1TSxw7m0UNri2nd9HI6
cU9uGEiEKmZ1jnRQQSQvjtV7Ql0wh5oFs41LnsBksjV1jYU4lT9NMtnsIHbI
SvpckCKLMWjlvbSwjH49e6qVnUz/pFf37jHVCb1bK3N2lF2LOKXFdIGDCvx3
efyZpXekztF/1/KUNrGSciYPpDFL+luXF7nYziZH3jSZtFYpE06FhCpteHqu
KBIY1Er3lgwGHdg9j3Y9Xy4Xw8VJ3LjgKS5fibP6FXv6W+zREvS1jT2GF7PL
j85tyn9ZvPFIZ1gq2Ze25tH2FQW0f1GR5I0zq8CRM6tzQoORx57h1hgZLsyd
4QzyeMEcNOHQxNtgNPFs3HkgKHd0LVHP9F6/8++hcff50nQ6Mi9JmnbYi//c
xuUeB3Muo4pxVTYJaubIaeiq4EQoyWkDA/ktc29QwJQ2xZ3SAhUOsqrzT5v7
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
0NP+fx8b3/gfiPbigw==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"35", ",", "30", ",", "12", ",", "10", ",", "8", ",", "5"}], 
     "}"}], "}"}], ",", " ", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", " ", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", " ", "Bold", ",", " ", "18"}], "]"}], "]"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Stata\>\"", ",", "Bold", ",", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Matlab\>\"", ",", "18"}], "]"}], "]"}], ",", " ", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Python\>\"", ",", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markdown\>\"", ",", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markup\>\"", ",", "18"}], "]"}], "]"}]}], "}"}]}], ",", 
   " ", 
   RowBox[{"SectorOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671681275394167*^9, 3.671681334903369*^9}, {
  3.671681463082444*^9, 3.6716814760176287`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$47995 = True}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxocCBAQU8sEcTd0ATZ0AXX5/o+bv69JP96OJx
UaUsyuc/7V/xZfrs8sc/7XGYDwUfcNj7AYe9H3DY+wGHvTBzfqCZhy7+A009
DCDE24Te/bA0vL8fXbyXfUPbFrM3++u+b9wyM+szmjno5qGLE1YH8e+V/eji
EP8+gvr3JQHzHuCQR49fhDh2ex/gsBfdfHSAy13o8gwM2O1lYMBuLwygxy+6
OCF5Bgbs8cvAgD1+4cABu7no6RmnPAP29AzzL3p6xmUv7fMvADZBx6Y=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3A+VKEDRN03
OB+i7h+cP2oedvMADtZbtg==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{84.50709175726637, 
               311.5256775539168}, {-170.9204159338539, \
-12.423594724188092`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"R\"\>",
                   StripOnInput->False,
                   FontSize->18,
                   FontWeight->Bold], TextForm]], "InlineText"],
                Text[
                 Style["R", Bold, 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              0.6809857496093202, 1.3365097862825517`, 1}, {0, 0}]},
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$47995, 
             FEPrivate`Not[DynamicChart`click$47995]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$47995, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.09079809994790937, 0.17820130483767357`, 0}}, {{1, 0, 0}, {0, 1, 
          0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$47995}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$47997 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxY6NKWZTPf9q/4sv02eWPf9ozgMED+6blbAG+
kWwHdDK7YoIC78DFoer2w/TBxIPslwtcfvFtvx+UhonHQ9Uth+qDiWO39wMO
ez/gsPcDDns/4LD3g30P+4a2LWZv9td937hlZtZnuPmL/rL8+XmI4cCDc+lH
/9pchYtD1e2H6YOL59f6zNP7uL8aSsPE+6DqaqH6YOIQdz+C+vclmn+/7Yf4
9wyaf1/uh+lD9e8zqH+fofn3EdS/LwnY+wCHvQ9w2PsAh70PcNj7AIe9DAzY
7WVgwG4vAwN2exkYsNvLwIA9fhkYsMcvAwP2+AWKY41fBgbs8YsrH8H8i56e
Yf5FT88w/6KnZ5h/0dPzwOVfAHdrunY=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5UIUOEHXf
4HyIuv9w/qh52M0DALHYYSk=
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{-12.549911745570242`, 
               203.55423213888344`}, {-118.9676080279057, 
               131.4400764541753}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Stata\"\>",
                   StripOnInput->False,
                   FontSize->18,
                   FontWeight->Bold], TextForm]], "InlineText"],
                Text[
                 Style["Stata", Bold, 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {-1.5, 1.8369701987210297`*^-16, 
               1}, {0, 0}]},
            StatusArea[#, 30]& ,
            TagBoxNote->"30"],
           StyleBox["30", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[30, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$47997, 
             FEPrivate`Not[DynamicChart`click$47997]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[
         DynamicChart`click$47997, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.2, 2.4492935982947065`*^-17, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$47997}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$47999 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKI6PKmVRPv9p//Iv02eXP/65nwEMHtgnfNQQc5N7
uP9djZLY11UMB2Di96IXxr7mumDPdLMhJH3/f7h67OZ8wGHOBxzmfLDvY9/Q
tsXszf7a7xu3zMz6DBfnz7JVzFx7c3/KbuOF+QwI889wFvEkCpywP7Qoob73
/He4OMQ9j6DueYnmnotQ93zYj+qeA1D3vCdgzgMc5jzAYc4DHOYwMGA3h4EB
uzkMDNjDh4EBe/gwMGAPH1zxDnMPenzB3IMeX9RLPwDHzgJa
                "], 
                SplineWeights -> {{1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{137.03376918452102`, 262.3140370147378}, {
               20.239765837218343`, 134.1571647823426}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Matlab\"\>",
                   StripOnInput->False,
                   FontSize->18], TextForm]], "InlineText"],
                Text[
                 Style["Matlab", 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               
               FontColor->GrayLevel[
                0]], {-0.37303483074728294`, -1.4528747416929464`, 1}, {0, 
              0}]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$47999, 
             FEPrivate`Not[DynamicChart`click$47999]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$47999, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.049737977432971064`, -0.19371663222572622`, 
            0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0,
           0, 1}}], TrackedSymbols :> {DynamicChart`click$47999}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$48001 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKL4fvTD2NdcFe+abDSHp+//vZwCDB/bnJqvUfF/2
xv7JrL7mM4X/4OLCCoKh559/tRfbcYl5W/B3uDh2cz7gMOcDDnOA6jmLeBIF
TtgfWpRQ33seIX4rT3quZe1Te+0vq5Iir36Di/PdOFN/O/eDvSDXvaYTdR/h
4hD3HIC65z2ae+5A3fMOzT1Poe55TsCcBzjMeYDDnAc4zGFgwG4OAwN2c4Dq
sYYPAwP28GFgwB4+uOId5h70+IK5Bz2+qJd+ADmNBuA=
                "], 
                SplineWeights -> {{1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{210.81937579201178`, 320.93548148869183`}, {
               1.1259195094731496`, 106.01755312854692`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Python\"\>",
                   StripOnInput->False,
                   FontSize->18], TextForm]], "InlineText"],
                Text[
                 Style["Python", 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              0.6386689373476089, -1.3572405786990294`, 1}, {0, 0}]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$48001, 
             FEPrivate`Not[DynamicChart`click$48001]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$48001, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.08515585831301453, -0.18096541049320392`, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$48001}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$48003 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKBZWEAw9//yrvdiOS8zbgr/vZwCDB/bRNiJrRZ/+
tp+3P/ngvc0f4eL/Q1yE+fL/2Ye81Dd/f+wxXBy7OR9wmPMBhzkf7PlunKm/
nfvBXoDrXtOJOoR6F93zjhdef7HPnS+qdK73FVx8n31xn9flb/b/7h6/lLbq
Llwc4p6nUPc8R3PPa6h7HqK55x3UPZcJmPMAhzkPcJjzAIc5DAzYzWFgwG4O
AwP28GFgwB4+DAzYwwdXvMPcgx5fMPegxxf10g8ALDwA3A==
                "], 
                SplineWeights -> {{1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              ImageSizeCache->{{232.7994230467084, 
               336.8743304568209}, {-29.826703799536816`, 64.9129185248533}}],
              Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Markdown\"\>",
                   StripOnInput->False,
                   FontSize->18], TextForm]], "InlineText"],
                Text[
                 Style["Markdown", 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              1.266491888253022, -0.8037401924684957, 1}, {0, 0}]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$48003, 
             FEPrivate`Not[DynamicChart`click$48003]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$48003, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.16886558510040295`, -0.10716535899579943`, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$48003}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      DynamicModuleBox[{DynamicChart`click$48005 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKP4f4iLMl//PPuSlvvn7Y4/3M4DBA/v/EGC/8PzG
3x9cr8DFITSDA4Q6sgeuHqs5H3CY8wGHOR/s99sX93ld/mb/7+7xS2mr7qKZ
892+aHtX5cuMc2jm/IDSe+DmQNzzDuqey2jmvIe65wiaOTB6CwFzHuAw5wEO
cx7gMAcY/ljNgQF0cxgYsIcPzBz08IEB9PDBFe8wc9DjCw4cINQRAuaQnn4A
Tk7toQ==
                "], 
                SplineWeights -> {{1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{240.72662980180877`, 
               323.73501803954287`}, {-48.73471699128078, 
               10.918994092124777`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Markup\"\>",
                   StripOnInput->False,
                   FontSize->18], TextForm]], "InlineText"],
                Text[
                 Style["Markup", 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Arial",
               FontColor->GrayLevel[0]], {
              1.4815325108927064`, -0.23465169756034665`, 1}, {0, 0}]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {
             GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {
             GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$48005, 
             FEPrivate`Not[DynamicChart`click$48005]], PassEventsDown -> True,
            Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$48005, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.19753766811902754`, -0.03128689300804622, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$48005}]],
       DynamicModuleValues:>{}]}}, {}}, {{}, {}, {}, {}, {}, {}}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  ImageSize->{424.2996057732429, 401.9155230558426},
  ImageSizeRaw->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{2.4, -2.4}, {2.4, -2.4}, {0., 1.02}},
  ViewPoint->{-1.4888156228366844`, -0.6685527113333735, 2.6639191641951547`},
  ViewVertical->{-0.16798879016873325`, 0.5745130857444347, 
   8.010708337507072}]], "Output",
 CellChangeTimes->{{3.6716812766150284`*^9, 3.671681335823023*^9}, {
  3.671681468218088*^9, 
  3.6716814769843187`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
pXDdtRcznVu2m1qXJQxGL5Oylv7wO3uJRwIM/OqL/GqqO9q21C49RbOMqP9A
6+C0HvIwwa92dYer8byqBKQuZ52Mpk0EGMuD0zSlKEca7e0dmyCv75OsgAb5
N4PhwS1hUnRb/tVrC4UCOj49nBUQjddr1LpWGS1bGM1dq4o9rGKHo8Y51sRj
1fR6TyszsnhxzQ8bx6k6L0DGChHgI3KDIK6YDRe/FnVebzG7SPYk/MssDeRK
9Mh/HSti8oW+LMCZAHNlnXcc81lW7yegkJVJUygPbAHjIlorff5auS98jMLk
3LwYuPi85L+V6ZpP6xW0459EPRv+wlLn580VVtRLRgzVrwKqPBwVhFqPy+NR
cWF66ab6FKp77FpB2KJucXGXLTZP4ewWATh1NA1aK6gp11RkhWrEJOWDgnpr
aV/4oCIIeSkSfl4Yzzn55oo0dcUvA9RmH5eNYSXta2jUUlsVz9y5l7jeXMkt
IBOs90NUWrLFkVuKbVrUzC3ZlGfikNPkVMPC2lwzb39cpWq4Cv14scbf0Fcz
1MV7PvpQbdw7tTgJOaQxFPk2kcxZHZ5J7cz88dYofzhh4Q9YnaGSoxFTd5si
yc6Dedqcw0v3YNknpv7Qxa0TJMr+0nlp6kWTzh1s06tqDVEbk2dtDUi3jDm5
6Dv8U85rbMHj++k7ShfOpqwqsP0XTCpMYOmrqGJIYHOiCpiDRcxLeT3gdamV
aOLJJamVALUSNXdVEeNMFgzeg5XgeGmbFcf3DhzQdkZQupPTnJwlRHPFTf0b
S5u9SiRgzXNVaOB4mElA1A+RyPW7D31QIKvAt17dCNl9noABRhJgddIeXszq
Bi8P9oFDE4Lhy7lR3Az5nZo3qE6o6DI0b/QSgkBjJJ1BJDolENEGl7ebQbyf
mVQt4jHmLh5v9unJ++uKieCyZ2Ltp6vBT9cNsNsegqtlXcxmDnfZNRn49Aye
0KYgpRSW2etxyEdINe0Q0hImx7SDBeldYNNAb3h/bCCvQPhpQTyXZTQ6DHK1
s4A020IBjOMDlUI60QKpzqKW2Ka59f29eS00jbOJ8WS9PaF6ii6k838T2h7W
vESfSyZ8/eB+sU/+vXDs8AeQ3vNx5k2qg1SDYjzWQU+ldII1hb3gTTvuXJUh
Y9u5lV4VCDMMEPY3UGTTLh300JYK1pjfObSzk3gETYwOWzsElY/yEIGTAkNV
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
8qvc7p+4Q8niBurVP1v9X+g2lbPC3kNKaUTpJh7DAGzZLE0P0Uc/OzeU5Uu1
Sciz3ahNEoY9VMgViww1g89muAwdq37FdPugKrpz+FzqO7pZWWWVyRsx0ecS
v2MVSdcld/QkOEFGCSKlYCtIE/wQbd5+qsxrBfjFgHG50kLRD+rggzM4oLTC
v+vbcVK60mxOKhGqN6o/qqujwcPYL8QQ6fTtrEk0suxRTqFRjAO0yAFhjL7D
q+jVNw4oP7k4iEW9k6dUNVVZ4zZeiuKEh2nKsYh3glUSoKk8hoPt935jWrhN
i17i8LIndMrphmPbVwKskjwkB4WKmC/rXLTxBNoB2ipSdHdRvvGAO3tTOpmH
OMzszZolQZ3xxE0t1ysi2iumr1tBJXPmIK1UURrGyOAUs6D6fl41Ssjsac+q
2n0TDRi/QhullkepZzeshZcMYEl7+Yzi3Wdjg2Bj3hgly2cUZ0p7HH2zTwHH
EYTtu7IX8uQOprUx7Y4mr1NmSS3gDd0dNIz4S1AwCfAX0w4rty3j+otbC5To
uwo6VAskZ62wtk+5+sPZDYuo/5A8bZ+ubJ/s/FqaWCfDIZgEHj3jexxk2U4q
8CLfQZKJFL9PVjk137+Zg30fFv4OjjQ46mcM5hulijeWRBoxmD6W0FOOV6Fw
E36bRndmzeaog1wLiS0mlkdWPs2deTSKuXlpJ7cm8sQZzZ9zdTTm2H4Fe9ev
P6bSgH9o6xXpXqbrV6PNTJubASyJywCsaiKwikszVZz2Kq/VruRYg0NT5Q3f
5RWjfAV00aABnLE1BOuB+qBBdM7Qp0Q8z5+6UFFgGyx4p6ZAN1WojKuqhfp8
xuvuGk/Od2V7jzD1LeCGHapvocMl3LRDkDIZXO12btyhwcEd6DgjtvmN2AEb
JmwqYc+l5bjZd8EflS89TMdP/7bCtmViT3Sq8qTNvOD8Ic1ELv2E16r7llB5
9UyYNIMtejXlF06nikXP8XJRL4B80DFGpICKED2y2aqbObvom9vM8R9+gh0s
1Cf5U+qp+b5Nikc/7aEZ37jm4jV81tk7P+YGNZdDhylXUbZVpRFbF5ZVqQdb
V5/gQ7DDV7KLDpvNiQ5qT+HVTTwVmaPTEOTo0jV8Q/osZms40MIdcdOOmriI
+1qH6MD7v6kUExf73BU3Ssa7a9KEPbAiTbPPb01TqWHVA8todGml0j+Mex2N
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\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"35", ",", "30", ",", "12", ",", "10", ",", "8", ",", "5"}], 
     "}"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", "Bold", ",", "White", ",", "25"}], "]"}], 
       "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Stata\>\"", ",", "Bold", ",", "White", ",", "25"}], 
        "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Matlab\>\"", ",", "White", ",", " ", "18"}], "]"}], 
       "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Python\>\"", ",", "White", ",", "18"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markdown\>\"", ",", "White", ",", "18"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markup\>\"", ",", "White", ",", "18"}], "]"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"SectorOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671806552852003*^9, 3.671806561010796*^9}, {
  3.671806615520698*^9, 3.6718066617135344`*^9}, {3.671806699667512*^9, 
  3.67180671272191*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[GrayLevel[0.5]], {{
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$3926 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxocCBAQU8sEcTd0ATZ0AXX5/o+bv69JP96OJx
UaUsyuc/7V/xZfrs8sc/7XGYDwUfcNj7AYe9H3DY+wGHvTBzfqCZhy7+A009
DCDE24Te/bA0vL8fXbyXfUPbFrM3++u+b9wyM+szmjno5qGLE1YH8e+V/eji
EP8+gvr3JQHzHuCQR49fhDh2ex/gsBfdfHSAy13o8gwM2O1lYMBuLwygxy+6
OCF5Bgbs8cvAgD1+4cABu7no6RmnPAP29AzzL3p6xmUv7fMvADZBx6Y=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3A+VKEDRN03
OB+i7h+cP2oedvMADtZbtg==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{21.456693805974577`, 
               428.63131386886323`}, {-247.47513283527695`, 
               25.77387413441852}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"R\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->25,
                   FontWeight->Bold,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["R", Bold, 
                  GrayLevel[1], 25]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              0.6809857496093202, 1.3365097862825517`, 1}, {0, 0}]},
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3926, 
             FEPrivate`Not[DynamicChart`click$3926]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$3926, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.09079809994790937, 0.17820130483767357`, 0}}, {{1, 0, 0}, {0, 1, 
          0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$3926}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$3928 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxY6NKWZTPf9q/4sv02eWPf9ozgMED+6blbAG+
kWwHdDK7YoIC78DFoer2w/TBxIPslwtcfvFtvx+UhonHQ9Uth+qDiWO39wMO
ez/gsPcDDns/4LD3g30P+4a2LWZv9td937hlZtZnuPmL/rL8+XmI4cCDc+lH
/9pchYtD1e2H6YOL59f6zNP7uL8aSsPE+6DqaqH6YOIQdz+C+vclmn+/7Yf4
9wyaf1/uh+lD9e8zqH+fofn3EdS/LwnY+wCHvQ9w2PsAh70PcNj7AIe9DAzY
7WVgwG4vAwN2exkYsNvLwIA9fhkYsMcvAwP2+AWKY41fBgbs8YsrH8H8i56e
Yf5FT88w/6KnZ5h/0dPzwOVfAHdrunY=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5UIUOEHXf
4HyIuv9w/qh52M0DALHYYSk=
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{-143.14290289286427`, 
               250.17315234897458`}, {-177.8045907459355, 
               251.82461004135325`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Stata\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->25,
                   FontWeight->Bold,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["Stata", Bold, 
                  GrayLevel[1], 25]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {-1.5, 1.8369701987210297`*^-16, 
               1}, {0, 0}]},
            StatusArea[#, 30]& ,
            TagBoxNote->"30"],
           StyleBox["30", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[30, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3928, 
             FEPrivate`Not[DynamicChart`click$3928]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$3928, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.2, 2.4492935982947065`*^-17, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$3928}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$3930 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKI6PKmVRPv9p//Iv02eXP/65nwEMHtgnfNQQc5N7
uP9djZLY11UMB2Di96IXxr7mumDPdLMhJH3/f7h67OZ8wGHOBxzmfLDvY9/Q
tsXszf7a7xu3zMz6DBfnz7JVzFx7c3/KbuOF+QwI889wFvEkCpywP7Qoob73
/He4OMQ9j6DueYnmnotQ93zYj+qeA1D3vCdgzgMc5jzAYc4DHOYwMGA3h4EB
uzkMDNjDh4EBe/gwMGAPH1zxDnMPenzB3IMeX9RLPwDHzgJa
                "], 
                SplineWeights -> {{1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{130.46661883891474`, 357.75384797759676`}, {
               53.541501696816425`, 255.56928136385758`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Matlab\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->18,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["Matlab", 
                  GrayLevel[1], 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               
               FontColor->GrayLevel[
                0]], {-0.37303483074728294`, -1.4528747416929464`, 1}, {0, 
              0}]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3930, 
             FEPrivate`Not[DynamicChart`click$3930]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$3930, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.049737977432971064`, -0.19371663222572622`, 
            0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0,
           0, 1}}], TrackedSymbols :> {DynamicChart`click$3930}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$3932 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKL4fvTD2NdcFe+abDSHp+//vZwCDB/bnJqvUfF/2
xv7JrL7mM4X/4OLCCoKh559/tRfbcYl5W/B3uDh2cz7gMOcDDnOA6jmLeBIF
TtgfWpRQ33seIX4rT3quZe1Te+0vq5Iir36Di/PdOFN/O/eDvSDXvaYTdR/h
4hD3HIC65z2ae+5A3fMOzT1Poe55TsCcBzjMeYDDnAc4zGFgwG4OAwN2c4Dq
sYYPAwP28GFgwB4+uOId5h70+IK5Bz2+qJd+ADmNBuA=
                "], 
                SplineWeights -> {{1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{260.5581715364479, 461.02340240959444`}, {
               20.73868018524169, 206.099053831002}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Python\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->18,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["Python", 
                  GrayLevel[1], 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              0.6386689373476089, -1.3572405786990294`, 1}, {0, 0}]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3932, 
             FEPrivate`Not[DynamicChart`click$3932]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$3932, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.08515585831301453, -0.18096541049320392`, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$3932}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$3934 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKBZWEAw9//yrvdiOS8zbgr/vZwCDB/bRNiJrRZ/+
tp+3P/ngvc0f4eL/Q1yE+fL/2Ye81Dd/f+wxXBy7OR9wmPMBhzkf7PlunKm/
nfvBXoDrXtOJOoR6F93zjhdef7HPnS+qdK73FVx8n31xn9flb/b/7h6/lLbq
Llwc4p6nUPc8R3PPa6h7HqK55x3UPZcJmPMAhzkPcJjzAIc5DAzYzWFgwG4O
AwP28GFgwB4+DAzYwwdXvMPcgx5fMPegxxf10g8ALDwA3A==
                "], 
                SplineWeights -> {{1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{296.80980651141374`, 
               485.1808201565809}, {-31.52261891529338, 135.1053240778934}}], 
             Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Markdown\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->18,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["Markdown", 
                  GrayLevel[1], 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              1.266491888253022, -0.8037401924684957, 1}, {0, 0}]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3934, 
             FEPrivate`Not[DynamicChart`click$3934]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$3934, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.16886558510040295`, -0.10716535899579943`, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$3934}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$3936 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKP4f4iLMl//PPuSlvvn7Y4/3M4DBA/v/EGC/8PzG
3x9cr8DFITSDA4Q6sgeuHqs5H3CY8wGHOR/s99sX93ld/mb/7+7xS2mr7qKZ
892+aHtX5cuMc2jm/IDSe+DmQNzzDuqey2jmvIe65wiaOTB6CwFzHuAw5wEO
cx7gMAcY/ljNgQF0cxgYsIcPzBz08IEB9PDBFe8wc9DjCw4cINQRAuaQnn4A
Tk7toQ==
                "], 
                SplineWeights -> {{1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{308.905184673969, 
               455.83584260379865`}, {-63.169178701056296`, 
               43.08706681875725}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Markup\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->18,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["Markup", 
                  GrayLevel[1], 18]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              1.4815325108927064`, -0.23465169756034665`, 1}, {0, 0}]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$3936, 
             FEPrivate`Not[DynamicChart`click$3936]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$3936, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.19753766811902754`, -0.03128689300804622, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$3936}]],
       DynamicModuleValues:>{}]}}, {}}, {{}, {}, {}, {}, {}, {}}},
  BaseStyle->Automatic,
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  ImageSize->{493.3333333333333, Automatic},
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Times"},
  Lighting->"Neutral",
  Method->{"ShrinkWrap" -> True},
  PlotRange->{{2.4, -2.4}, {2.4, -2.4}, {0., 1.02}},
  ViewPoint->{-1.5143074740793927`, -0.9899030051430348, 2.54695208324697},
  ViewVertical->{0.21517424562799967`, 0.9020755985377792, 3.741118262513612}]
  ], "Input",
 CellChangeTimes->{3.671806770989292*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6716817333017955`*^9, 3.6718065875168285`*^9}],

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"35", ",", "30", ",", "12", ",", "10", ",", "8", ",", "5"}], 
     "}"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<ProfileSector3D\>\""}], 
   ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<R\>\"", ",", "Bold", ",", "White", ",", "30"}], "]"}], 
       "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Stata\>\"", ",", "Bold", ",", "White", ",", "30"}], 
        "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Matlab\>\"", ",", "Bold", ",", " ", "25"}], "]"}], "]"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Python\>\"", ",", "Bold", ",", "25"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markdown\>\"", ",", "Bold", ",", "25"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Markup\>\"", ",", "Bold", ",", "25"}], "]"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"SectorOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671807010286353*^9, 3.6718070740686636`*^9}, {
  3.6718073095230455`*^9, 3.671807337553988*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[GrayLevel[0.5]], {{
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$6755 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxocCBAQU8sEcTd0ATZ0AXX5/o+bv69JP96OJx
UaUsyuc/7V/xZfrs8sc/7XGYDwUfcNj7AYe9H3DY+wGHvTBzfqCZhy7+A009
DCDE24Te/bA0vL8fXbyXfUPbFrM3++u+b9wyM+szmjno5qGLE1YH8e+V/eji
EP8+gvr3JQHzHuCQR49fhDh2ex/gsBfdfHSAy13o8gwM2O1lYMBuLwygxy+6
OCF5Bgbs8cvAgD1+4cABu7no6RmnPAP29AzzL3p6xmUv7fMvADZBx6Y=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jD+/xAXYb78d3A+VKEDRN03
OB+i7h+cP2oedvMADtZbtg==
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{39.44685972316954, 
               472.3874442375218}, {-313.609342946908, 47.43548186031984}}], 
             Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"R\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->30,
                   FontWeight->Bold,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["R", Bold, 
                  GrayLevel[1], 30]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              0.6809857496093202, 1.3365097862825517`, 1}, {0, 0}]},
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6755, 
             FEPrivate`Not[DynamicChart`click$6755]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$6755, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.09079809994790937, 0.17820130483767357`, 0}}, {{1, 0, 0}, {0, 1, 
          0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$6755}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.264425, 0.423024, 0.3849], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$6757 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJWIAaxY6NKWZTPf9q/4sv02eWPf9ozgMED+6blbAG+
kWwHdDK7YoIC78DFoer2w/TBxIPslwtcfvFtvx+UhonHQ9Uth+qDiWO39wMO
ez/gsPcDDns/4LD3g30P+4a2LWZv9td937hlZtZnuPmL/rL8+XmI4cCDc+lH
/9pchYtD1e2H6YOL59f6zNP7uL8aSsPE+6DqaqH6YOIQdz+C+vclmn+/7Yf4
9wyaf1/uh+lD9e8zqH+fofn3EdS/LwnY+wCHvQ9w2PsAh70PcNj7AIe9DAzY
7WVgwG4vAwN2exkYsNvLwIA9fhkYsMcvAwP2+AWKY41fBgbs8YsrH8H8i56e
Yf5FT88w/6KnZ5h/0dPzwOVfAHdrunY=
                "], SplineWeights -> CompressedData["
1:eJxTTMoPSmViYGDgBGJWBhj4YH/Guj5t3oJn9jB+9BP9KSqz38P5UIUOEHXf
4HyIuv9w/qh52M0DALHYYSk=
                 "], 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 2, 2, 2}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{-133.60465241234795`, 
               301.72322520404214`}, {-190.85466417604522`, 
               333.2221633977186}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Stata\"\>",
                   StripOnInput->False,
                   LineColor->GrayLevel[1],
                   FrontFaceColor->GrayLevel[1],
                   BackFaceColor->GrayLevel[1],
                   GraphicsColor->GrayLevel[1],
                   FontSize->30,
                   FontWeight->Bold,
                   FontColor->GrayLevel[1]], TextForm]], "InlineText"],
                Text[
                 Style["Stata", Bold, 
                  GrayLevel[1], 30]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {-1.5, 1.8369701987210297`*^-16, 
               1}, {0, 0}]},
            StatusArea[#, 30]& ,
            TagBoxNote->"30"],
           StyleBox["30", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[30, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6757, 
             FEPrivate`Not[DynamicChart`click$6757]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$6757, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.2, 2.4492935982947065`*^-17, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$6757}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.416394, 0.555345, 0.24182], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$6759 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKI6PKmVRPv9p//Iv02eXP/65nwEMHtgnfNQQc5N7
uP9djZLY11UMB2Di96IXxr7mumDPdLMhJH3/f7h67OZ8wGHOBxzmfLDvY9/Q
tsXszf7a7xu3zMz6DBfnz7JVzFx7c3/KbuOF+QwI889wFvEkCpywP7Qoob73
/He4OMQ9j6DueYnmnotQ93zYj+qeA1D3vCdgzgMc5jzAYc4DHOYwMGA3h4EB
uzkMDNjDh4EBe/gwMGAPH1zxDnMPenzB3IMeX9RLPwDHzgJa
                "], 
                SplineWeights -> {{1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}, {2., 
                 1.8595529717765027`, 2.}, {1., 0.9297764858882513, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{169.5789904842451, 404.2578440099148}, {
               75.21660016672331, 304.28599885464126`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Matlab\"\>",
                   StripOnInput->False,
                   FontSize->25,
                   FontWeight->Bold], TextForm]], "InlineText"],
                Text[
                 Style["Matlab", Bold, 25]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               
               FontColor->GrayLevel[
                0]], {-0.37303483074728294`, -1.4528747416929464`, 1}, {0, 
              0}]},
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6759, 
             FEPrivate`Not[DynamicChart`click$6759]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$6759, {{{1., 0, 0}, {0, 1., 0}, {
            0, 0, 1.}}, {-0.049737977432971064`, -0.19371663222572622`, 
            0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0,
           0, 1}}], TrackedSymbols :> {DynamicChart`click$6759}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.813033, 0.766292, 0.303458], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$6761 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKL4fvTD2NdcFe+abDSHp+//vZwCDB/bnJqvUfF/2
xv7JrL7mM4X/4OLCCoKh559/tRfbcYl5W/B3uDh2cz7gMOcDDnOA6jmLeBIF
TtgfWpRQ33seIX4rT3quZe1Te+0vq5Iir36Di/PdOFN/O/eDvSDXvaYTdR/h
4hD3HIC65z2ae+5A3fMOzT1Poe55TsCcBzjMeYDDnAc4zGFgwG4OAwN2c4Dq
sYYPAwP28GFgwB4+uOId5h70+IK5Bz2+qJd+ADmNBuA=
                "], 
                SplineWeights -> {{1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}, {2., 
                 1.902113032590307, 2.}, {1., 0.9510565162951535, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{297.0252596377582, 500.8515542890626}, {
               20.5322200490873, 228.16404437485608`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Python\"\>",
                   StripOnInput->False,
                   FontSize->25,
                   FontWeight->Bold], TextForm]], "InlineText"],
                Text[
                 Style["Python", Bold, 25]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              0.6386689373476089, -1.3572405786990294`, 1}, {0, 0}]},
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6761, 
             FEPrivate`Not[DynamicChart`click$6761]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$6761, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.08515585831301453, -0.18096541049320392`, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$6761}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.812807, 0.518694, 0.303459], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$6763 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKBZWEAw9//yrvdiOS8zbgr/vZwCDB/bRNiJrRZ/+
tp+3P/ngvc0f4eL/Q1yE+fL/2Ye81Dd/f+wxXBy7OR9wmPMBhzkf7PlunKm/
nfvBXoDrXtOJOoR6F93zjhdef7HPnS+qdK73FVx8n31xn9flb/b/7h6/lLbq
Llwc4p6nUPc8R3PPa6h7HqK55x3UPZcJmPMAhzkPcJjzAIc5DAzYzWFgwG4O
AwP28GFgwB4+DAzYwwdXvMPcgx5fMPegxxf10g8ALDwA3A==
                "], 
                SplineWeights -> {{1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}, {2., 
                 1.9371663222572622`, 2.}, {1., 0.9685831611286311, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{331.74337981887527`, 
               524.4376140674796}, {-47.37142949088374, 
               142.02127417221072`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Markdown\"\>",
                   StripOnInput->False,
                   FontSize->25,
                   FontWeight->Bold], TextForm]], "InlineText"],
                Text[
                 Style["Markdown", Bold, 25]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              1.266491888253022, -0.8037401924684957, 1}, {0, 0}]},
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6763, 
             FEPrivate`Not[DynamicChart`click$6763]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$6763, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.16886558510040295`, -0.10716535899579943`, 0}}, {{1, 0, 0}, {0, 
          1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$6763}]],
       DynamicModuleValues:>{}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[GrayLevel[0.5]], 
      DynamicModuleBox[{DynamicChart`click$6765 = False}, 
       GeometricTransformation3DBox[
        TagBox[
         TagBox[
          TooltipBox[
           TagBox[{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGJmKP4f4iLMl//PPuSlvvn7Y4/3M4DBA/v/EGC/8PzG
3x9cr8DFITSDA4Q6sgeuHqs5H3CY8wGHOR/s99sX93ld/mb/7+7xS2mr7qKZ
892+aHtX5cuMc2jm/IDSe+DmQNzzDuqey2jmvIe65wiaOTB6CwFzHuAw5wEO
cx7gMAcY/ljNgQF0cxgYsIcPzBz08IEB9PDBFe8wc9DjCw4cINQRAuaQnn4A
Tk7toQ==
                "], 
                SplineWeights -> {{1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}, {2., 
                 1.9753766811902753`, 2.}, {1., 0.9876883405951377, 1.}}, 
                SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0, 
                  0, 1, 1, 1}}, SplineDegree -> {2, 2}, 
                SplineClosed -> {True, False}, 
                Method -> {"SurfaceCaps" -> True}]},
              
              ImageSizeCache->{{343.22636100086135`, 
               497.9844506855286}, {-85.86124436984221, 
               34.794944048707606`}}], Text3DBox[
              StyleBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  StyleBox["\<\"Markup\"\>",
                   StripOnInput->False,
                   FontSize->25,
                   FontWeight->Bold], TextForm]], "InlineText"],
                Text[
                 Style["Markup", Bold, 25]]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontFamily->"Times",
               FontColor->GrayLevel[0]], {
              1.4815325108927064`, -0.23465169756034665`, 1}, {0, 0}]},
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {
             GrayLevel[0], FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {
             GrayLevel[0], FontFamily -> "Times"}], "Tooltip"]& ],
         EventHandlerTag[{
          "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6765, 
             FEPrivate`Not[DynamicChart`click$6765]], PassEventsDown -> True, 
           Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
        If[DynamicChart`click$6765, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
           0.19753766811902754`, -0.03128689300804622, 0}}, {{1, 0, 0}, {0, 1,
           0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
         TrackedSymbols :> {DynamicChart`click$6765}]],
       DynamicModuleValues:>{}]}}, {}}, {{}, {}, {}, {}, {}, {}}},
  BaseStyle->Automatic,
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  ImageSize->{575.1839274357524, 571.1111111111111},
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Times"},
  Lighting->"Neutral",
  Method->{"ShrinkWrap" -> True},
  PlotRange->{{2.4, -2.4}, {2.4, -2.4}, {0., 1.02}},
  ViewPoint->{-1.7442352802330103`, 0.10515180042644455`, 2.5897077800511674`},
  ViewVertical->{-0.12276179713720695`, 0.7416196261194644, 
   6.594921313541726}]], "Input",
 CellChangeTimes->{3.6718073830680904`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.67180711369782*^9, 3.6718073496763744`*^9}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 656, 17, 29, "Input"],
Cell[1239, 41, 31775, 600, 217, 20867, 419, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33051, 646, 704, 18, 29, "Input"],
Cell[33758, 666, 31295, 595, 217, 20854, 422, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65090, 1266, 793, 20, 29, "Input"],
Cell[65886, 1288, 40237, 727, 217, 15918, 326, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106160, 2020, 1049, 26, 50, "Input"],
Cell[107212, 2048, 51916, 1030, 219, "Output"]
}, Open  ]],
Cell[159143, 3081, 1653, 42, 70, "Input"],
Cell[160799, 3125, 53344, 1081, 371, "Input"],
Cell[CellGroupData[{
Cell[214168, 4210, 1051, 26, 50, "Input"],
Cell[215222, 4238, 43216, 795, 217, 18782, 393, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258475, 5038, 735, 17, 50, "Input"],
Cell[259213, 5057, 59945, 1064, 217, 17628, 369, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319195, 6126, 848, 21, 50, "Input"],
Cell[320046, 6149, 55920, 997, 217, 17673, 368, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376003, 7151, 1526, 39, 70, "Input"],
Cell[377532, 7192, 63880, 1144, 375, 19542, 416, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[441427, 8339, 1745, 46, 70, "Input"],
Cell[443175, 8387, 21047, 448, 443, InheritFromParent],
Cell[464225, 8837, 94, 1, 29, "Input"],
Cell[464322, 8840, 1666, 43, 70, "Input"],
Cell[465991, 8885, 20161, 428, 527, InheritFromParent],
Cell[486155, 9315, 91, 1, 29, InheritFromParent]
}
]
*)

